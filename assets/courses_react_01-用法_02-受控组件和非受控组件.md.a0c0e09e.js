import{_ as s,o as n,c as a,X as l}from"./chunks/framework.6625828e.js";const C=JSON.parse('{"title":"受控组件和非受控组件","description":"","frontmatter":{"title":"受控组件和非受控组件","author":"DBAAZzz","date":"2024/04/16 16：00","categories":["react 学习"],"tags":["受控组件、非受控组件"]},"headers":[],"relativePath":"courses/react/01-用法/02-受控组件和非受控组件.md","filePath":"courses/react/01-用法/02-受控组件和非受控组件.md","lastUpdated":1713320005000}'),p={name:"courses/react/01-用法/02-受控组件和非受控组件.md"},o=l(`<h1 id="受控组件和非受控组件" tabindex="-1">受控组件和非受控组件 <a class="header-anchor" href="#受控组件和非受控组件" aria-label="Permalink to &quot;受控组件和非受控组件&quot;">​</a></h1><h2 id="受控组件" tabindex="-1">受控组件 <a class="header-anchor" href="#受控组件" aria-label="Permalink to &quot;受控组件&quot;">​</a></h2><p>受控组件是指表单数据被 React 组件的 state 管理的组件。 在受控组件中，表单的数据通过 React 的 state 进行跟踪。每当表单元素的状态需要更新时，比如用户输入了一些数据，都会有一个事件处理函数来管理这个变化，并且使用 setState 来更新组件的状态。然后组件会重新渲染，新的状态将反映在表单元素上。</p><p>父组件：</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> React, { useState } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;react&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> InputComp </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;./input&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Parent</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> () </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> [</span><span style="color:#6CB6FF;">inputValue</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">setInputValue</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">useState</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;default&#39;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">onChange</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (</span><span style="color:#F69D50;">value</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#DCBDFB;">setInputValue</span><span style="color:#ADBAC7;">(value);</span></span>
<span class="line"><span style="color:#ADBAC7;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> (</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">p</span><span style="color:#ADBAC7;">&gt;我是父组件&lt;/</span><span style="color:#8DDB8C;">p</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">InputComp</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">value</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">inputValue</span><span style="color:#F47067;">}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">onChange</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">onChange</span><span style="color:#F47067;">}</span><span style="color:#ADBAC7;">&gt;&lt;/</span><span style="color:#8DDB8C;">InputComp</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"><span style="color:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">Parent;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">React</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useState</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">react</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">./input</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">inputValue</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setInputValue</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useState</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">default</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">onChange</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">value</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">setInputValue</span><span style="color:#999999;">(</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">p</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">我是父组件</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">p</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#998418;">InputComp</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">value</span><span style="color:#999999;">={</span><span style="color:#B07D48;">inputValue</span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">onChange</span><span style="color:#999999;">={</span><span style="color:#B07D48;">onChange</span><span style="color:#999999;">}&gt;&lt;/</span><span style="color:#998418;">InputComp</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Parent</span><span style="color:#999999;">;</span></span></code></pre></div><p>子组件：</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> { FC } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;react&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">InputComp</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">FC</span><span style="color:#ADBAC7;">&lt;{</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">value</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">onChange</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> (</span><span style="color:#F69D50;">value</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">void</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}&gt; </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (</span><span style="color:#F69D50;">props</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">let</span><span style="color:#ADBAC7;"> { value, onChange } </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> props;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> (</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">div</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">input</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">value</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">value</span><span style="color:#F47067;">}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">onChange</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">onChange</span><span style="color:#ADBAC7;">(e.target.value)</span><span style="color:#F47067;">}</span><span style="color:#ADBAC7;"> /&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">div</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"><span style="color:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">InputComp;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">FC</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">react</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">FC</span><span style="color:#999999;">&lt;{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#B07D48;">value</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#59873A;">onChange</span><span style="color:#999999;">: (</span><span style="color:#B07D48;">value</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">) =&gt; </span><span style="color:#2E8F82;">void</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}&gt; =</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">props</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">value</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">onChange</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">props</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">input</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">value</span><span style="color:#999999;">={</span><span style="color:#B07D48;">value</span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">onChange</span><span style="color:#999999;">={(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#59873A;">onChange</span><span style="color:#999999;">(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">.</span><span style="color:#B07D48;">target</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">)}</span><span style="color:#393A34;"> </span><span style="color:#999999;">/&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#999999;">;</span></span></code></pre></div><p>能看到子组件中 input 的 value 值是受控的，因为它的值绑定到了 Reactd 的状态 inputValue 上。当用户输入数据时，onChange 方法会被调用，这个方法又会调用 setInputValue 来更新状态。</p><h2 id="非受控组件" tabindex="-1">非受控组件 <a class="header-anchor" href="#非受控组件" aria-label="Permalink to &quot;非受控组件&quot;">​</a></h2><p>非受控组件则相反，它们以一种更像传统 HTML 表单的方式来操作：表单数据由 DOM 本身处理，而不是由 React 状态管理。 在非受控组件中，我们通常会使用 ref 来直接从 DOM 获取表单数据，而不是为每次的状态变化编写事件处理函数。这种方式下，React 不需要更新组件的状态来反映输入的变化，因为 DOM 已经处理了这些变化。</p><p>父组件：</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> React, { useRef, useState } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;react&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> InputComp, { InputCompInstance } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;./input&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Parent</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> () </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">inputRef</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">useRef</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">InputCompInstance</span><span style="color:#ADBAC7;">&gt;(</span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> (</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">InputComp</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">ref</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">inputRef</span><span style="color:#F47067;">}</span><span style="color:#ADBAC7;">&gt;&lt;/</span><span style="color:#8DDB8C;">InputComp</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">button</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">onClick</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">() </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#DCBDFB;">alert</span><span style="color:#ADBAC7;">(inputRef.current</span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">.value);</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">      &gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        获取子组件的值</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;/</span><span style="color:#8DDB8C;">button</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"><span style="color:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">Parent;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">React</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useRef</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useState</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">react</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputCompInstance</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">./input</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">inputRef</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useRef</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">InputCompInstance</span><span style="color:#999999;">&gt;(</span><span style="color:#AB5959;">null</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#998418;">InputComp</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">={</span><span style="color:#B07D48;">inputRef</span><span style="color:#999999;">}&gt;&lt;/</span><span style="color:#998418;">InputComp</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">button</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">onClick</span><span style="color:#999999;">={()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#59873A;">alert</span><span style="color:#999999;">(</span><span style="color:#B07D48;">inputRef</span><span style="color:#999999;">.</span><span style="color:#B07D48;">current</span><span style="color:#AB5959;">!</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">}}</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">        获取子组件的值</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">button</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Parent</span><span style="color:#999999;">;</span></span></code></pre></div><p>子组件：</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> { forwardRef, useImperativeHandle, useState } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;react&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">InputCompInstance</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/** 输入框的值 */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">value</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">InputComp</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">forwardRef</span><span style="color:#ADBAC7;">((</span><span style="color:#F69D50;">props</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">ref</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> [</span><span style="color:#6CB6FF;">value</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">setValue</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">useState</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;&#39;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">useImperativeHandle</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">    ref,</span></span>
<span class="line"><span style="color:#ADBAC7;">    () </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        value,</span></span>
<span class="line"><span style="color:#ADBAC7;">      };</span></span>
<span class="line"><span style="color:#ADBAC7;">    },</span></span>
<span class="line"><span style="color:#ADBAC7;">    [value]</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> (</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">div</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">input</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">value</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">value</span><span style="color:#F47067;">}</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">onChange</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">setValue</span><span style="color:#ADBAC7;">(e.target.value)</span><span style="color:#F47067;">}</span><span style="color:#ADBAC7;"> /&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">div</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"><span style="color:#ADBAC7;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">InputComp;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">forwardRef</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useImperativeHandle</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useState</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">react</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">InputCompInstance</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/** 输入框的值 */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">value</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">forwardRef</span><span style="color:#999999;">((</span><span style="color:#B07D48;">props</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">value</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setValue</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useState</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">useImperativeHandle</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">value</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">[</span><span style="color:#B07D48;">value</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">input</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">value</span><span style="color:#999999;">={</span><span style="color:#B07D48;">value</span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">onChange</span><span style="color:#999999;">={(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#59873A;">setValue</span><span style="color:#999999;">(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">.</span><span style="color:#B07D48;">target</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">)}</span><span style="color:#393A34;"> </span><span style="color:#999999;">/&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#999999;">;</span></span></code></pre></div><p>表单输入使用 ref 而不是状态来存储当前值。当表单提交的时候，我们可以通过 inputRef.current.value 直接访问元素的值。</p><h2 id="既是受控组件也是非受控组件" tabindex="-1">既是受控组件也是非受控组件 <a class="header-anchor" href="#既是受控组件也是非受控组件" aria-label="Permalink to &quot;既是受控组件也是非受控组件&quot;">​</a></h2><p>如何实现组件既是受控组件又是非受控组件？需要在组件内部设计一种机制来同时支持这两种方式。可以通过检查 props 中的特定值来决定使用受控模式还是非受控模式。</p><p>通常，受控组件依赖于 value 属性和 onChange 事件处理程序来同步数据，非受控组件则依赖于 defaultValue 和 ref。</p><p>父组件：</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> React, { useRef, useState } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;react&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> InputComp, { InputCompInstance } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;./input&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Parent</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> () </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> [</span><span style="color:#6CB6FF;">inputValue</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">setInputValue</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">useState</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;defaultValue&#39;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">inputRef</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">useRef</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">InputCompInstance</span><span style="color:#ADBAC7;">&gt;(</span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> (</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">InputComp</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">value</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">inputValue</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">defaultValue</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;notCtrolled&#39;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">ref</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">inputRef</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">onChange</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">value</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#DCBDFB;">setInputValue</span><span style="color:#ADBAC7;">(value);</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">      &gt;&lt;/</span><span style="color:#8DDB8C;">InputComp</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">button</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">onClick</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">() </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#DCBDFB;">alert</span><span style="color:#ADBAC7;">(inputRef.current</span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">.value);</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">      &gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        获取子组件的值</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;/</span><span style="color:#8DDB8C;">button</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"><span style="color:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">Parent;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">React</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useRef</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useState</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">react</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputCompInstance</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">./input</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">inputValue</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setInputValue</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useState</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">defaultValue</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">inputRef</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useRef</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">InputCompInstance</span><span style="color:#999999;">&gt;(</span><span style="color:#AB5959;">null</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#998418;">InputComp</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">value</span><span style="color:#999999;">={</span><span style="color:#B07D48;">inputValue</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">defaultValue</span><span style="color:#999999;">=</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">notCtrolled</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">={</span><span style="color:#B07D48;">inputRef</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">onChange</span><span style="color:#999999;">={(</span><span style="color:#B07D48;">value</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#59873A;">setInputValue</span><span style="color:#999999;">(</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">}}</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&gt;&lt;/</span><span style="color:#998418;">InputComp</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">button</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">onClick</span><span style="color:#999999;">={()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#59873A;">alert</span><span style="color:#999999;">(</span><span style="color:#B07D48;">inputRef</span><span style="color:#999999;">.</span><span style="color:#B07D48;">current</span><span style="color:#AB5959;">!</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">}}</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">        获取子组件的值</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">button</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Parent</span><span style="color:#999999;">;</span></span></code></pre></div><p>子组件：</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  FC,</span></span>
<span class="line"><span style="color:#ADBAC7;">  Ref,</span></span>
<span class="line"><span style="color:#ADBAC7;">  forwardRef,</span></span>
<span class="line"><span style="color:#ADBAC7;">  useEffect,</span></span>
<span class="line"><span style="color:#ADBAC7;">  useImperativeHandle,</span></span>
<span class="line"><span style="color:#ADBAC7;">  useState,</span></span>
<span class="line"><span style="color:#ADBAC7;">} </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;react&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">InputCompInstance</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/** 输入框的值 */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">value</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">InputComp</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">FC</span><span style="color:#ADBAC7;">&lt;{</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">value</span><span style="color:#F47067;">?:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">defaultValue</span><span style="color:#F47067;">?:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">ref</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Ref</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#6CB6FF;">any</span><span style="color:#ADBAC7;">&gt;;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">onChange</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> (</span><span style="color:#F69D50;">value</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">void</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}&gt; </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">forwardRef</span><span style="color:#ADBAC7;">((</span><span style="color:#F69D50;">props</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">ref</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">isControlled</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> props.value </span><span style="color:#F47067;">!==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">undefined</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> [</span><span style="color:#6CB6FF;">value</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">setValue</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">useState</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">    isControlled </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> props.value </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> props.defaultValue</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">useEffect</span><span style="color:#ADBAC7;">(() </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (isControlled) </span><span style="color:#DCBDFB;">setValue</span><span style="color:#ADBAC7;">(props.value);</span></span>
<span class="line"><span style="color:#ADBAC7;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// 组件内部的状态是通过 useEffect 更新的</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// 子组件内部的 state 会比父组件的 state 晚一个渲染周期</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// 解决原子性问题</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">finalValue</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> isControlled </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> props.value </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> value;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">useImperativeHandle</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">    ref,</span></span>
<span class="line"><span style="color:#ADBAC7;">    () </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        value,</span></span>
<span class="line"><span style="color:#ADBAC7;">      };</span></span>
<span class="line"><span style="color:#ADBAC7;">    },</span></span>
<span class="line"><span style="color:#ADBAC7;">    [value]</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> (</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">div</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">input</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">value</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">finalValue</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">onChange</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#DCBDFB;">setValue</span><span style="color:#ADBAC7;">(e.target.value);</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (isControlled) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            props.</span><span style="color:#DCBDFB;">onChange</span><span style="color:#ADBAC7;">(e.target.value);</span></span>
<span class="line"><span style="color:#ADBAC7;">          }</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">      /&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">div</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"><span style="color:#ADBAC7;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">InputComp;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">FC</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">Ref</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">forwardRef</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">useEffect</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">useImperativeHandle</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">useState</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">react</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">InputCompInstance</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/** 输入框的值 */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">value</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">FC</span><span style="color:#999999;">&lt;{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#B07D48;">value</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#B07D48;">defaultValue</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">Ref</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">any</span><span style="color:#999999;">&gt;;</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#59873A;">onChange</span><span style="color:#999999;">: (</span><span style="color:#B07D48;">value</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">) =&gt; </span><span style="color:#2E8F82;">void</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}&gt; =</span><span style="color:#393A34;"> </span><span style="color:#59873A;">forwardRef</span><span style="color:#999999;">((</span><span style="color:#B07D48;">props</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">isControlled</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!==</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">value</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setValue</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useState</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">isControlled</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">?</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#B07D48;">defaultValue</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">useEffect</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">isControlled</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#59873A;">setValue</span><span style="color:#999999;">(</span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 组件内部的状态是通过 useEffect 更新的</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 子组件内部的 state 会比父组件的 state 晚一个渲染周期</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 解决原子性问题</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">finalValue</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">isControlled</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">?</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">value</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">useImperativeHandle</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">value</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">[</span><span style="color:#B07D48;">value</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">input</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">value</span><span style="color:#999999;">={</span><span style="color:#B07D48;">finalValue</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">onChange</span><span style="color:#999999;">={(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#59873A;">setValue</span><span style="color:#999999;">(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">.</span><span style="color:#B07D48;">target</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">isControlled</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">            </span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#59873A;">onChange</span><span style="color:#999999;">(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">.</span><span style="color:#B07D48;">target</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">}}</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">/&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#999999;">;</span></span></code></pre></div><ul><li>我们通过检查 value 属性是否被父组件提供来判断是否应该以受控模式工作。</li><li>如果是受控模式，我们期望父组件提供 value 和 onChange 来控制输入值。</li><li>如果是非受控模式（value 未定义），组件会使用内部状态 value 来管理输入，并且可以接收一个 defaultValue 作为初始值。</li></ul><p>由于是在 useEffect 中通过 setState 来做的状态同步，所以会额外的触发一次渲染，存在性能问题。可以使用 useRef 和手动渲染来更新这个问题</p><p>父组件：</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> React, { useRef, useState } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;react&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> InputComp, { InputCompInstance } </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;./input&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Parent</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> () </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> [</span><span style="color:#6CB6FF;">inputValue</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">setInputValue</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">useState</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;defaultValue&#39;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">inputRef</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">useRef</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">InputCompInstance</span><span style="color:#ADBAC7;">&gt;(</span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> (</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">InputComp</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">value</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">inputValue</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">defaultValue</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;notCtrolled&#39;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">ref</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">inputRef</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">onChange</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">value</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#DCBDFB;">setInputValue</span><span style="color:#ADBAC7;">(value);</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">      &gt;&lt;/</span><span style="color:#8DDB8C;">InputComp</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">button</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">onClick</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">() </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#DCBDFB;">alert</span><span style="color:#ADBAC7;">(inputRef.current</span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">.value);</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">      &gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        获取子组件的值</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;/</span><span style="color:#8DDB8C;">button</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"><span style="color:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">Parent;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">React</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useRef</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useState</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">react</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputCompInstance</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">./input</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">inputValue</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setInputValue</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useState</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">defaultValue</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">inputRef</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useRef</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">InputCompInstance</span><span style="color:#999999;">&gt;(</span><span style="color:#AB5959;">null</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#998418;">InputComp</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">value</span><span style="color:#999999;">={</span><span style="color:#B07D48;">inputValue</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">defaultValue</span><span style="color:#999999;">=</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">notCtrolled</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">={</span><span style="color:#B07D48;">inputRef</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">onChange</span><span style="color:#999999;">={(</span><span style="color:#B07D48;">value</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#59873A;">setInputValue</span><span style="color:#999999;">(</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">}}</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&gt;&lt;/</span><span style="color:#998418;">InputComp</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">button</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">onClick</span><span style="color:#999999;">={()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#59873A;">alert</span><span style="color:#999999;">(</span><span style="color:#B07D48;">inputRef</span><span style="color:#999999;">.</span><span style="color:#B07D48;">current</span><span style="color:#AB5959;">!</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">}}</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">        获取子组件的值</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">button</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Parent</span><span style="color:#999999;">;</span></span></code></pre></div><p>子组件：</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  FC,</span></span>
<span class="line"><span style="color:#ADBAC7;">  Ref,</span></span>
<span class="line"><span style="color:#ADBAC7;">  forwardRef,</span></span>
<span class="line"><span style="color:#ADBAC7;">  useEffect,</span></span>
<span class="line"><span style="color:#ADBAC7;">  useImperativeHandle,</span></span>
<span class="line"><span style="color:#ADBAC7;">  useRef,</span></span>
<span class="line"><span style="color:#ADBAC7;">  useState,</span></span>
<span class="line"><span style="color:#ADBAC7;">} </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;react&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">InputCompInstance</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/** 输入框的值 */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">value</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">InputComp</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">FC</span><span style="color:#ADBAC7;">&lt;{</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">value</span><span style="color:#F47067;">?:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">defaultValue</span><span style="color:#F47067;">?:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">ref</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Ref</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#6CB6FF;">any</span><span style="color:#ADBAC7;">&gt;;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">onChange</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> (</span><span style="color:#F69D50;">value</span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">string</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">void</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}&gt; </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">forwardRef</span><span style="color:#ADBAC7;">((</span><span style="color:#F69D50;">props</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">ref</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">isControlled</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> props.value </span><span style="color:#F47067;">!==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">undefined</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">stateRef</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">useRef</span><span style="color:#ADBAC7;">(props.value </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> props.defaultValue);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> [</span><span style="color:#6CB6FF;">_</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">setFlag</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">useState</span><span style="color:#ADBAC7;">({});</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">forceUpdate</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#DCBDFB;">setFlag</span><span style="color:#ADBAC7;">({});</span></span>
<span class="line"><span style="color:#ADBAC7;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (isControlled) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    stateRef.current </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> props.value;</span></span>
<span class="line"><span style="color:#ADBAC7;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// 组件内部的状态是通过 useEffect 更新的，子组件内部的 state 会比父组件的 state 晚一个渲染周期</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// 解决原子性问题</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">finalValue</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> isControlled </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> props.value </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> stateRef.current;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">useImperativeHandle</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">    ref,</span></span>
<span class="line"><span style="color:#ADBAC7;">    () </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        value: finalValue,</span></span>
<span class="line"><span style="color:#ADBAC7;">      };</span></span>
<span class="line"><span style="color:#ADBAC7;">    },</span></span>
<span class="line"><span style="color:#ADBAC7;">    [finalValue]</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> (</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">div</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">      &lt;</span><span style="color:#8DDB8C;">input</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">value</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">finalValue</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">onChange</span><span style="color:#F47067;">={</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">=&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">          stateRef.current </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> e.target.value;</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#768390;">// 执行forceUpdate是为了再次渲染子组件，更新 finalValue 的值</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#DCBDFB;">forceUpdate</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (isControlled) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            props.</span><span style="color:#DCBDFB;">onChange</span><span style="color:#ADBAC7;">(e.target.value);</span></span>
<span class="line"><span style="color:#ADBAC7;">          }</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span><span style="color:#F47067;">}</span></span>
<span class="line"><span style="color:#ADBAC7;">      /&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">div</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">  );</span></span>
<span class="line"><span style="color:#ADBAC7;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">export</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">default</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">InputComp;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">FC</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">Ref</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">forwardRef</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">useEffect</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">useImperativeHandle</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">useRef</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">useState</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">react</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">InputCompInstance</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/** 输入框的值 */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">value</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">FC</span><span style="color:#999999;">&lt;{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#B07D48;">value</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#B07D48;">defaultValue</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">Ref</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">any</span><span style="color:#999999;">&gt;;</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#59873A;">onChange</span><span style="color:#999999;">: (</span><span style="color:#B07D48;">value</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">) =&gt; </span><span style="color:#2E8F82;">void</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}&gt; =</span><span style="color:#393A34;"> </span><span style="color:#59873A;">forwardRef</span><span style="color:#999999;">((</span><span style="color:#B07D48;">props</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">isControlled</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!==</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">stateRef</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useRef</span><span style="color:#999999;">(</span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">||</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#B07D48;">defaultValue</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">_</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setFlag</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useState</span><span style="color:#999999;">({});</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">forceUpdate</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">setFlag</span><span style="color:#999999;">({});</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">isControlled</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">stateRef</span><span style="color:#999999;">.</span><span style="color:#B07D48;">current</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 组件内部的状态是通过 useEffect 更新的，子组件内部的 state 会比父组件的 state 晚一个渲染周期</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 解决原子性问题</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">finalValue</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">isControlled</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">?</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">stateRef</span><span style="color:#999999;">.</span><span style="color:#B07D48;">current</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">useImperativeHandle</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#998418;">value</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">finalValue</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">[</span><span style="color:#B07D48;">finalValue</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">input</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">value</span><span style="color:#999999;">={</span><span style="color:#B07D48;">finalValue</span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">onChange</span><span style="color:#999999;">={(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#B07D48;">stateRef</span><span style="color:#999999;">.</span><span style="color:#B07D48;">current</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">e</span><span style="color:#999999;">.</span><span style="color:#B07D48;">target</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">          </span><span style="color:#A0ADA0;">// 执行forceUpdate是为了再次渲染子组件，更新 finalValue 的值</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#59873A;">forceUpdate</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">isControlled</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">            </span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#59873A;">onChange</span><span style="color:#999999;">(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">.</span><span style="color:#B07D48;">target</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">          </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">}}</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">/&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">InputComp</span><span style="color:#999999;">;</span></span></code></pre></div><h2 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h2><p><a href="https://zhuanlan.zhihu.com/p/536322574" target="_blank" rel="noreferrer">React 组件的受控与非受控</a></p>`,30),e=[o];function t(c,r,y,A,B,D){return n(),a("div",null,e)}const F=s(p,[["render",t]]);export{C as __pageData,F as default};
