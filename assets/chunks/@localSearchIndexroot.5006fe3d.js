const t='{"documentCount":62,"nextId":62,"documentIds":{"0":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#typescript-基础类型","1":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#类型声明和类型推断","2":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#赋值时推断","3":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#推断函数返回类型","4":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#结构化对象类型推断","5":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#解构推断","6":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#typescript-的基础类型","7":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#boolean-类型","8":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#number-类型","9":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#bigint-类型","10":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#string-类型","11":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#symbol-类型","12":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#object-类型","13":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#undefined-类型、null-类型","14":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#object-类型和-object-类型","15":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#object-类型-1","16":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#object-类型-2","17":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#undefined-和-null-类型的特殊性","18":"/courses/typescript/01-基础学习/01-TypeScript的基础类型#任何其他类型都可以赋值为-undefined-或-null","19":"/courses/typescript/01-基础学习/02-TypeScript的any、unknow、never 类型#typescript-的-any、unknow、never-类型","20":"/courses/typescript/01-基础学习/02-TypeScript的any、unknow、never 类型#any-类型","21":"/courses/typescript/01-基础学习/02-TypeScript的any、unknow、never 类型#类型推断问题","22":"/courses/typescript/01-基础学习/02-TypeScript的any、unknow、never 类型#any-带来的污染问题","23":"/courses/typescript/01-基础学习/02-TypeScript的any、unknow、never 类型#unknow-类型","24":"/courses/typescript/01-基础学习/02-TypeScript的any、unknow、never 类型#unknow-的使用限制","25":"/courses/typescript/01-基础学习/02-TypeScript的any、unknow、never 类型#never-类型","26":"/courses/typescript/01-基础学习/02-TypeScript的any、unknow、never 类型#与-void-的区别","27":"/courses/typescript/01-基础学习/03-TypeScript的数组类型#typescript-的数组类型","28":"/courses/typescript/01-基础学习/03-TypeScript的数组类型#数组的类型推断","29":"/courses/typescript/01-基础学习/03-TypeScript的数组类型#只读数组","30":"/courses/typescript/01-基础学习/03-TypeScript的数组类型#只读数组不能和数组的范型写法一起使用","31":"/courses/typescript/01-基础学习/04-TypeScript的元组类型#typescript-的元组类型","32":"/courses/typescript/01-基础学习/04-TypeScript的元组类型#读取元组的成员类型","33":"/courses/typescript/01-基础学习/04-TypeScript的元组类型#只读元组","34":"/courses/typescript/01-基础学习/04-TypeScript的元组类型#元组的具体使用场景","35":"/courses/typescript/01-基础学习/05-TypeScript的symbol类型#typescript-的-symbol-类型","36":"/courses/typescript/01-基础学习/05-TypeScript的symbol类型#unique-symbol","37":"/courses/typescript/01-基础学习/05-TypeScript的symbol类型#symbol-的类型推断","38":"/courses/typescript/01-基础学习/06-TypeScript的函数类型#typescript-的函数类型","39":"/courses/typescript/01-基础学习/06-TypeScript的函数类型#函数类型可以采用对象的写法","40":"/courses/typescript/01-基础学习/06-TypeScript的函数类型#箭头函数","41":"/courses/typescript/01-基础学习/06-TypeScript的函数类型#可选参数","42":"/courses/typescript/01-基础学习/06-TypeScript的函数类型#参数默认值","43":"/courses/typescript/01-基础学习/06-TypeScript的函数类型#readonly-只读参数","44":"/courses/typescript/01-基础学习/06-TypeScript的函数类型#函数重载","45":"/courses/typescript/01-基础学习/07-TypeScript的interface#typescript-的-interface","46":"/courses/typescript/01-基础学习/07-TypeScript的interface#interface-的继承","47":"/courses/typescript/01-基础学习/07-TypeScript的interface#interface-继承-interface","48":"/courses/typescript/01-基础学习/08-TypeScript的Enum类型#typescript-的-enum-枚举-类型","49":"/courses/typescript/01-基础学习/08-TypeScript的Enum类型#数字枚举","50":"/courses/typescript/01-基础学习/08-TypeScript的Enum类型#字符串枚举","51":"/courses/typescript/01-基础学习/08-TypeScript的Enum类型#反向映射","52":"/courses/typescript/01-基础学习/08-TypeScript的Enum类型#keyof-运算符","53":"/courses/typescript/01-基础学习/09-类型断言#typescript-的类型断言","54":"/courses/typescript/01-基础学习/09-类型断言#类型断言和类型转换","55":"/courses/typescript/01-基础学习/09-类型断言#双重断言","56":"/courses/typescript/01-基础学习/09-类型断言#as-const-断言","57":"/courses/typescript/01-基础学习/09-类型断言#非空断言","58":"/courses/typescript/01-基础学习/09-类型断言#断言函数-asserts-修饰符","59":"/courses/typescript/01-基础学习/09-类型断言#asserts-修饰符和-is-关键字的区别","60":"/courses/typescript/#typescript","61":"/courses/typescript/#类型的概念"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,1],"1":[1,2,22],"2":[1,3,23],"3":[1,3,32],"4":[1,3,20],"5":[1,3,18],"6":[2,2,28],"7":[2,3,11],"8":[2,3,8],"9":[2,3,10],"10":[2,3,9],"11":[2,3,9],"12":[2,3,22],"13":[3,3,14],"14":[4,2,7],"15":[2,6,41],"16":[2,6,46],"17":[4,2,5],"18":[4,6,63],"19":[6,1,1],"20":[2,6,35],"21":[1,6,35],"22":[2,6,38],"23":[2,6,35],"24":[2,6,70],"25":[2,6,59],"26":[3,6,23],"27":[2,1,35],"28":[1,2,42],"29":[1,2,35],"30":[1,3,23],"31":[2,1,55],"32":[1,2,27],"33":[1,2,16],"34":[1,2,28],"35":[4,1,28],"36":[2,4,53],"37":[2,4,24],"38":[2,1,51],"39":[1,2,27],"40":[1,2,19],"41":[1,2,46],"42":[1,3,30],"43":[2,2,15],"44":[1,2,109],"45":[3,1,6],"46":[2,3,3],"47":[2,4,16],"48":[5,1,14],"49":[1,5,21],"50":[1,5,16],"51":[1,5,12],"52":[2,5,25],"53":[2,1,44],"54":[1,2,30],"55":[1,2,31],"56":[3,2,36],"57":[1,2,27],"58":[4,2,82],"59":[4,2,28],"60":[1,1,38],"61":[1,1,2]},"averageFieldLength":[1.9677419354838708,2.983870967741935,28.693548387096776],"storedFields":{"0":{"title":"TypeScript 基础类型","titles":[]},"1":{"title":"类型声明和类型推断","titles":["TypeScript 基础类型"]},"2":{"title":"赋值时推断","titles":["TypeScript 基础类型","类型声明和类型推断"]},"3":{"title":"推断函数返回类型","titles":["TypeScript 基础类型","类型声明和类型推断"]},"4":{"title":"结构化对象类型推断","titles":["TypeScript 基础类型","类型声明和类型推断"]},"5":{"title":"解构推断","titles":["TypeScript 基础类型","类型声明和类型推断"]},"6":{"title":"TypeScript 的基础类型","titles":["TypeScript 基础类型"]},"7":{"title":"boolean 类型","titles":["TypeScript 基础类型","TypeScript 的基础类型"]},"8":{"title":"number 类型","titles":["TypeScript 基础类型","TypeScript 的基础类型"]},"9":{"title":"bigint 类型","titles":["TypeScript 基础类型","TypeScript 的基础类型"]},"10":{"title":"string 类型","titles":["TypeScript 基础类型","TypeScript 的基础类型"]},"11":{"title":"symbol 类型","titles":["TypeScript 基础类型","TypeScript 的基础类型"]},"12":{"title":"object 类型","titles":["TypeScript 基础类型","TypeScript 的基础类型"]},"13":{"title":"undefined 类型、null 类型","titles":["TypeScript 基础类型","TypeScript 的基础类型"]},"14":{"title":"Object 类型和 object 类型","titles":["TypeScript 基础类型"]},"15":{"title":"Object 类型","titles":["TypeScript 基础类型","Object 类型和 object 类型"]},"16":{"title":"object 类型","titles":["TypeScript 基础类型","Object 类型和 object 类型"]},"17":{"title":"undefined 和 null 类型的特殊性","titles":["TypeScript 基础类型"]},"18":{"title":"任何其他类型都可以赋值为 undefined 或 null","titles":["TypeScript 基础类型","undefined 和 null 类型的特殊性"]},"19":{"title":"TypeScript 的 any、unknow、never 类型","titles":[]},"20":{"title":"any 类型","titles":["TypeScript 的 any、unknow、never 类型"]},"21":{"title":"类型推断问题","titles":["TypeScript 的 any、unknow、never 类型","any 类型"]},"22":{"title":"any 带来的污染问题","titles":["TypeScript 的 any、unknow、never 类型","any 类型"]},"23":{"title":"unknow 类型","titles":["TypeScript 的 any、unknow、never 类型"]},"24":{"title":"unknow 的使用限制","titles":["TypeScript 的 any、unknow、never 类型","unknow 类型"]},"25":{"title":"never 类型","titles":["TypeScript 的 any、unknow、never 类型"]},"26":{"title":"与 void 的区别","titles":["TypeScript 的 any、unknow、never 类型","never 类型"]},"27":{"title":"TypeScript 的数组类型","titles":[]},"28":{"title":"数组的类型推断","titles":["TypeScript 的数组类型"]},"29":{"title":"只读数组","titles":["TypeScript 的数组类型"]},"30":{"title":"只读数组不能和数组的范型写法一起使用","titles":["TypeScript 的数组类型","只读数组"]},"31":{"title":"TypeScript 的元组类型","titles":[]},"32":{"title":"读取元组的成员类型","titles":["TypeScript 的元组类型"]},"33":{"title":"只读元组","titles":["TypeScript 的元组类型"]},"34":{"title":"元组的具体使用场景","titles":["TypeScript 的元组类型"]},"35":{"title":"TypeScript 的 symbol 类型","titles":[]},"36":{"title":"unique symbol","titles":["TypeScript 的 symbol 类型"]},"37":{"title":"symbol 的类型推断","titles":["TypeScript 的 symbol 类型"]},"38":{"title":"TypeScript 的函数类型","titles":[]},"39":{"title":"函数类型可以采用对象的写法","titles":["TypeScript 的函数类型"]},"40":{"title":"箭头函数","titles":["TypeScript 的函数类型"]},"41":{"title":"可选参数","titles":["TypeScript 的函数类型"]},"42":{"title":"参数默认值","titles":["TypeScript 的函数类型","可选参数"]},"43":{"title":"readonly 只读参数","titles":["TypeScript 的函数类型"]},"44":{"title":"函数重载","titles":["TypeScript 的函数类型"]},"45":{"title":"TypeScript 的 interface","titles":[]},"46":{"title":"interface 的继承","titles":["TypeScript 的 interface"]},"47":{"title":"interface 继承 interface","titles":["TypeScript 的 interface","interface 的继承"]},"48":{"title":"TypeScript 的 Enum（枚举） 类型","titles":[]},"49":{"title":"数字枚举","titles":["TypeScript 的 Enum（枚举） 类型"]},"50":{"title":"字符串枚举","titles":["TypeScript 的 Enum（枚举） 类型"]},"51":{"title":"反向映射","titles":["TypeScript 的 Enum（枚举） 类型"]},"52":{"title":"keyof 运算符","titles":["TypeScript 的 Enum（枚举） 类型"]},"53":{"title":"TypeScript 的类型断言","titles":[]},"54":{"title":"类型断言和类型转换","titles":["TypeScript 的类型断言"]},"55":{"title":"双重断言","titles":["TypeScript 的类型断言"]},"56":{"title":"as const 断言","titles":["TypeScript 的类型断言"]},"57":{"title":"非空断言","titles":["TypeScript 的类型断言"]},"58":{"title":"断言函数（asserts 修饰符）","titles":["TypeScript 的类型断言"]},"59":{"title":"asserts 修饰符和 is 关键字的区别","titles":["TypeScript 的类型断言"]},"60":{"title":"TypeScript","titles":[]},"61":{"title":"类型的概念","titles":["TypeScript"]}},"dirtCount":0,"index":[["跳转到定义",{"2":{"60":1}}],["包括代码补全",{"2":{"60":1}}],["包含了一切可能的类型",{"2":{"20":1}}],["增加了编辑器和",{"2":{"60":1}}],["复杂的应用程序源码更易阅读",{"2":{"60":1}}],["使大型",{"2":{"60":1}}],["使用",{"2":{"56":1,"60":1}}],["重构等等",{"2":{"60":1}}],["重构代码更容易",{"2":{"60":1}}],["重载声明的排序很重要",{"2":{"44":1}}],["重载的各个类型描述与函数的具体实现之间",{"2":{"44":1}}],["静态类型意味着变量的类型在程序中的任何时候都不能被改变",{"2":{"60":1}}],["静态类型编译阶段并不会报错",{"2":{"22":1}}],["添加静态类的原因至少有三个",{"2":{"60":1}}],["添加静态类型",{"2":{"60":1}}],["添加到",{"2":{"48":1}}],["通过缩小和函数返回值的比较",{"2":{"59":1}}],["通常用于条件判断",{"2":{"59":1}}],["通常都应该优先考虑设为",{"2":{"24":1}}],["此时仍是any",{"2":{"58":2}}],["同样的",{"2":{"58":1}}],["同时也是",{"2":{"6":1}}],["同时",{"2":{"4":1}}],["能够根据上下文推断出每个条件分支值的类型",{"2":{"58":1}}],["编译器能够在控制流分析中",{"2":{"58":1}}],["编译时",{"2":{"58":1}}],["编译不报错let",{"2":{"22":1}}],["编译不报错",{"2":{"18":2,"22":5}}],["终止当前代码的运行",{"2":{"58":1}}],["才会返回正常",{"2":{"58":1}}],["让代码按照正常流程运行",{"2":{"58":1}}],["修饰符和",{"0":{"59":1}}],["修饰符",{"0":{"58":1}}],["保证这些变量不会为空",{"2":{"57":1}}],["非空断言还可以用于赋值断言",{"2":{"57":1}}],["非空断言",{"0":{"57":1}}],["python",{"2":{"56":2}}],["push",{"2":{"28":7,"29":2}}],["如下例子",{"2":{"56":1}}],["如果达到要求",{"2":{"58":1}}],["如果函数达不到要求",{"2":{"58":1}}],["如果函数内部不能修改某个参数",{"2":{"43":1}}],["如果函数的某个参数可以省略",{"2":{"41":1}}],["如果传入",{"2":{"42":1}}],["如果不传入该参数",{"2":{"42":1}}],["如果写成",{"2":{"38":1}}],["如果变量被赋值为一个函数",{"2":{"38":1}}],["如果变量声明没有给出类型",{"2":{"37":1}}],["如果赋值为另一个",{"2":{"37":2}}],["如果初始值不是空数组",{"2":{"28":1}}],["如果数组变量没有声明类型",{"2":{"28":1}}],["如果无法推断出类型",{"2":{"21":1}}],["如果等于",{"2":{"18":1}}],["如果没有声明变量类型",{"2":{"56":1}}],["如果没有",{"2":{"1":1}}],["断言分析出后面的类型",{"2":{"58":1}}],["断言函数的",{"2":{"58":1}}],["断言函数一种特殊的函数",{"2":{"58":1}}],["断言函数",{"0":{"58":1},"2":{"58":2}}],["断言后",{"2":{"56":1}}],["断言",{"0":{"56":1}}],["然后再断言成目标类型",{"2":{"55":1}}],["然而实际上",{"2":{"26":1}}],["先断言成",{"2":{"55":1}}],["双重断言",{"0":{"55":1}}],["子类型",{"2":{"54":1}}],["子类型继承了父类型的所有特征",{"2":{"29":1}}],["父类型",{"2":{"54":1}}],["意味着它能做",{"2":{"60":1}}],["意味着如果给变量断言了一个不正确的类型并使用",{"2":{"54":1}}],["意为涵盖了所有下层",{"2":{"20":1}}],["尖括号语法与",{"2":{"53":1}}],["尖括号语法和",{"2":{"53":1}}],["语句等同于",{"2":{"58":1}}],["语法冲突",{"2":{"53":1}}],["语法二",{"2":{"53":2}}],["语法一",{"2":{"53":2}}],["语法",{"2":{"53":2}}],["语言",{"2":{"38":1}}],["语言里的广义对象",{"2":{"15":1}}],["main",{"2":{"53":2}}],["mycanvas",{"2":{"53":2}}],["myenum",{"2":{"52":5}}],["myfunc",{"2":{"41":2}}],["myfn",{"2":{"39":4}}],["mytuple",{"2":{"31":3}}],["始终返回",{"2":{"53":1}}],["getelementbyid",{"2":{"53":3}}],["gt",{"2":{"12":2,"15":2,"16":2,"24":2,"27":2,"30":6,"33":2,"38":5,"39":2,"40":2,"41":2,"44":4,"53":5,"55":4}}],["允许你覆盖它的推断",{"2":{"53":1}}],["相当于",{"2":{"52":1}}],["作为联合类型返回",{"2":{"52":1}}],["作为值",{"2":{"18":1}}],["结构的所有成员名",{"2":{"52":1}}],["结构化对象类型推断",{"0":{"4":1}}],["keyof",{"0":{"52":1},"2":{"52":5}}],["反向映射",{"0":{"51":1}}],["反过来就不成立",{"2":{"41":1}}],["反过来就不行",{"2":{"29":1}}],["字符串枚举",{"0":{"50":1}}],["换句话说",{"2":{"49":1}}],["up",{"2":{"49":5,"50":4}}],["unique",{"0":{"36":1},"2":{"36":14,"37":4}}],["unknown",{"2":{"23":3,"24":22,"25":1,"55":7,"58":6,"59":2}}],["unknown类型",{"2":{"18":1}}],["unknow",{"0":{"19":1,"23":1,"24":1},"1":{"20":1,"21":1,"22":1,"23":1,"24":2,"25":1,"26":1},"2":{"23":1,"55":1}}],["undefined",{"0":{"13":1,"17":1,"18":1},"1":{"18":1},"2":{"6":1,"13":7,"15":1,"17":1,"18":9,"41":9,"42":3,"44":4,"57":2,"58":2,"60":1}}],["数字枚举成员还可以获得从枚举值到枚举名称的反向映射",{"2":{"51":1}}],["数字枚举",{"0":{"49":1}}],["数组的成员类型写在方括号外面",{"2":{"31":1}}],["数组的类型推断",{"0":{"28":1}}],["数组有一个根本特征",{"2":{"27":1}}],["数组",{"2":{"16":2}}],["数组类型有两种写法",{"2":{"27":1}}],["数组类型",{"2":{"15":2}}],["数组和函数",{"2":{"12":1}}],["功能不同",{"2":{"48":1}}],["枚举允许开发人员定义一组命名常量",{"2":{"48":1}}],["枚举是",{"2":{"48":1}}],["枚举",{"0":{"48":1},"1":{"49":1,"50":1,"51":1,"52":1}}],["继承其他的",{"2":{"47":1}}],["继承",{"0":{"47":1}}],["`",{"2":{"44":2}}],["`$",{"2":{"44":2}}],["$",{"2":{"44":2}}],["下面的代码箭头函数重载的一种写法",{"2":{"44":1}}],["下面部分讲箭头函数的时候会贴出相关代码",{"2":{"39":1}}],["防止覆盖其他类型声明",{"2":{"44":1}}],["防止被推断为",{"2":{"21":1}}],["否则将会抛出异常",{"2":{"58":1}}],["否则不要使用类型断言",{"2":{"54":1}}],["否则",{"2":{"52":1}}],["否则就会报错",{"2":{"44":1}}],["否则报错",{"2":{"44":1}}],["具体实现的类型就一定要是",{"2":{"44":1}}],["处理不同的参数",{"2":{"44":1}}],["处理异构数据",{"2":{"34":1}}],["第三行是函数本身的类型声明",{"2":{"44":1}}],["第二种写法需要注意的是",{"2":{"38":1}}],["前两行类型声明列举了重载的各种情况",{"2":{"44":1}}],["到这里还没有结束",{"2":{"44":1}}],["分别对函数",{"2":{"44":1}}],["分别执行对应的逻辑",{"2":{"44":1}}],["逐一定义每一种情况的类型",{"2":{"44":1}}],["该函数内部有处理字符串和数组的两套逻辑",{"2":{"44":1}}],["该类型的变量可以赋予任意类型的值",{"2":{"20":1}}],["称为函数重载",{"2":{"44":1}}],["执行不同逻辑的行为",{"2":{"44":1}}],["设有默认值的参数",{"2":{"42":1}}],["设置了默认值的参数",{"2":{"42":1}}],["设计了",{"2":{"36":1}}],["跟在必选参数的后面",{"2":{"41":1}}],["虽然类型声明为",{"2":{"41":1}}],["上例的",{"2":{"41":1}}],["上面",{"2":{"49":1}}],["上面示例中",{"2":{"23":1,"31":1,"32":1,"41":2,"44":3}}],["上面的例子中可以看到",{"2":{"28":1}}],["上面的例子中",{"2":{"18":1,"22":1}}],["上面的示例中",{"2":{"16":1}}],["上面的类型名称都是小写的",{"2":{"6":1}}],["|",{"2":{"41":4,"44":15,"52":2,"57":2}}],["||",{"2":{"24":1}}],["原始类型",{"2":{"41":1}}],["overload",{"2":{"44":1}}],["okfunction",{"2":{"41":1}}],["ok",{"2":{"41":3}}],["obj",{"2":{"15":14,"16":14,"18":5}}],["object",{"0":{"12":1,"14":2,"15":1,"16":1},"1":{"15":2,"16":2},"2":{"6":1,"12":7,"14":2,"15":7,"16":9,"18":3}}],["则被推断为值类型常量",{"2":{"56":1}}],["则在参数名后面加问号表示",{"2":{"41":1}}],["则推断类型还是",{"2":{"37":1}}],["则推断类型为",{"2":{"37":1}}],["被赋值为一个箭头函数",{"2":{"40":1}}],["面示例中",{"2":{"40":1}}],["箭头函数是普通函数的一种简化写法",{"2":{"40":1}}],["箭头函数",{"0":{"40":1}}],["来声明",{"2":{"39":1}}],["返回值类型写在参数列表的圆括号后面",{"2":{"40":1}}],["返回值",{"2":{"39":2}}],["参数可以是字符串",{"2":{"44":1}}],["参数默认值",{"0":{"42":1}}],["参数名带有问号",{"2":{"41":1}}],["参数",{"2":{"41":2}}],["参数的类型写在参数名后面",{"2":{"40":1}}],["参数的类型是",{"2":{"38":1}}],["参数列表",{"2":{"39":2}}],["并根据结果返回对应的布尔类型",{"2":{"59":1}}],["并根据判断结果执行不同的操作",{"2":{"44":1}}],["并不是一个断言函数",{"2":{"58":1}}],["并且它不应该再发出错误",{"2":{"53":1}}],["并且能以你任何你想要的方式分析它",{"2":{"53":1}}],["并且根据参数的不同",{"2":{"44":1}}],["并且这个",{"2":{"38":1}}],["并加上了自己的特征",{"2":{"29":1}}],["有时候",{"2":{"55":1}}],["有可能在运行时会报错",{"2":{"54":1}}],["有一些编程语言允许不同的函数参数",{"2":{"44":1}}],["有些函数可以接受不同类型或不同个数的参数",{"2":{"44":1}}],["有的语言的函数类型可以不写参数名",{"2":{"38":1}}],["有两种写法",{"2":{"33":1}}],["有两个",{"2":{"25":1}}],["本例是",{"2":{"38":1}}],["本身以外",{"2":{"26":1}}],["需要在声明函数时",{"2":{"38":1}}],["需要注意的是",{"2":{"6":1}}],["其中",{"2":{"40":1,"49":1}}],["其次",{"2":{"38":1}}],["其实属于两个值类型",{"2":{"36":1}}],["其他任何类型不能赋值给",{"2":{"26":1}}],["其他任何的值都可以赋值给",{"2":{"15":1}}],["其他运算都会报错",{"2":{"24":1}}],["其他的变量",{"2":{"22":1}}],["每个成员都必须使用字符串文字或另一个字符串枚举成员进行常量初始化",{"2":{"50":1}}],["每个声明为",{"2":{"36":1}}],["每行可能包含不同类型的数据",{"2":{"34":1}}],["等同于说",{"2":{"41":1}}],["等同于",{"2":{"36":2}}],["等在",{"2":{"6":1}}],["声明",{"2":{"36":1}}],["某个具体的",{"2":{"36":1}}],["必须在这个实现当中",{"2":{"44":1}}],["必须通过变量来引用",{"2":{"36":1}}],["必须自己推断那些变量的类型",{"2":{"21":1}}],["5",{"2":{"36":2}}],["比如",{"2":{"36":1,"38":1,"41":1}}],["里面",{"2":{"35":1}}],["里面的狭义对象",{"2":{"16":1}}],["构造函数创建的",{"2":{"35":1}}],["成为了一种新的原生类型",{"2":{"35":1}}],["成员类型写在方括号里面的就是元组",{"2":{"31":1}}],["起",{"2":{"35":1}}],["expr",{"2":{"55":4}}],["extends",{"2":{"47":3}}],["enum",{"0":{"48":1},"1":{"49":1,"50":1,"51":1,"52":1},"2":{"49":1,"50":1,"51":7,"52":2}}],["else",{"2":{"44":2}}],["ecmascript",{"2":{"35":1}}],["error",{"2":{"25":4,"57":2,"58":6}}],["自",{"2":{"35":1}}],["你可以使用元组来表示每一行的数据",{"2":{"34":1}}],["你可能马上就会想到与此类似的",{"2":{"26":1}}],["文件时",{"2":{"34":1}}],["解析",{"2":{"34":1}}],["解构推断",{"0":{"5":1}}],["例如",{"2":{"34":1,"53":1}}],["写法是在变量后面加上感叹号",{"2":{"57":1}}],["写法二",{"2":{"33":2,"38":2}}],["写法一",{"2":{"33":2,"38":2}}],["写在外面的就是数组",{"2":{"31":1}}],["获取元组的成员类型",{"2":{"32":1}}],["document",{"2":{"53":3}}],["down",{"2":{"49":3,"50":4}}],["direction",{"2":{"49":2,"50":2}}],["date",{"2":{"32":2}}],["delete",{"2":{"29":2}}],["读取成员类型",{"2":{"32":1}}],["读取元组的成员类型",{"0":{"32":1}}],["canvas",{"2":{"53":2}}],["circle",{"2":{"47":2}}],["cba",{"2":{"44":2}}],["createpoint",{"2":{"42":4}}],["csvdata",{"2":{"34":2}}],["csvrow",{"2":{"34":4}}],["csv",{"2":{"34":1}}],["c",{"2":{"31":2,"38":1}}],["color",{"2":{"47":2}}],["console",{"2":{"38":6,"57":2,"58":2}}],["const",{"0":{"56":1},"2":{"9":3,"11":1,"12":5,"28":2,"29":2,"30":5,"31":1,"34":2,"36":9,"37":7,"38":4,"40":1,"44":5,"53":1,"56":8}}],["compileroptions",{"2":{"18":2}}],["越界的成员会报错",{"2":{"31":1}}],["越界访问数组并不会报错",{"2":{"27":1}}],["从而缩小参数的类型范围",{"2":{"59":1}}],["从而把内置的基本类型变更为值类型",{"2":{"56":1}}],["从类型声明就可以明确知道",{"2":{"31":1}}],["从集合论的角度看",{"2":{"20":1}}],["三个和四个",{"2":{"31":1}}],["问号只能用于元组的尾部成员",{"2":{"31":1}}],["问题",{"2":{"23":1}}],["没有单独区分这种类型",{"2":{"31":1}}],["没有这个方法",{"2":{"18":1}}],["特有的数据类型",{"2":{"31":1}}],["元组类型可以很方便地表示和操作这些数据",{"2":{"34":1}}],["元组的具体使用场景",{"0":{"34":1}}],["元组的成员数量是有限的",{"2":{"31":1}}],["元组的成员类型是写在方括号里面",{"2":{"31":1}}],["元组也可以是只读的",{"2":{"33":1}}],["元组可以通过方括号",{"2":{"32":1}}],["元组包含多少个成员",{"2":{"31":1}}],["元组成员的类型可以添加问号后缀",{"2":{"31":1}}],["元组",{"2":{"31":2}}],["用于保证函数参数符合某种类型",{"2":{"58":1}}],["用于告诉编译器",{"2":{"56":1}}],["用来判断一个变量是否属于某个接口或类型",{"2":{"59":1}}],["用来断言某个参数为真",{"2":{"58":1}}],["用来初始化",{"2":{"49":1}}],["用来生成只读数组的类型",{"2":{"30":1}}],["用上面例子说明的话",{"2":{"44":1}}],["用户自定义的属性和方法都不存在于这两个类型之中",{"2":{"16":1}}],["我们真的要断言一个完全无关的类型",{"2":{"55":1}}],["我们使用",{"2":{"53":1}}],["我们使用对象类型",{"2":{"16":1}}],["我们定义了一个数字枚举",{"2":{"49":1}}],["我们知道",{"2":{"29":1}}],["视为两种不一样的类型",{"2":{"29":1}}],["关键字经常用来封装",{"2":{"59":1}}],["关键字被称为类型谓语",{"2":{"59":1}}],["关键字的区别",{"0":{"59":1}}],["关键字不能与数组的泛型写法一起使用",{"2":{"30":1}}],["关键字",{"2":{"29":1,"43":1,"47":1}}],["当你需要处理异构",{"2":{"34":1}}],["当我们有声明只读数组的需求时",{"2":{"29":1}}],["当一个函数永不返回时",{"2":{"26":1}}],["当一个函数返回空值时",{"2":{"26":1}}],["命令为变量赋值",{"2":{"36":1}}],["命令声明的变量",{"2":{"37":4,"56":2}}],["命令声明的数组变量是可以改变成员的",{"2":{"29":1}}],["命令声明",{"2":{"36":1}}],["命令行打开",{"2":{"18":1}}],["规定",{"2":{"29":1}}],["后面的表达式",{"2":{"58":1}}],["后面还必须对函数",{"2":{"44":1}}],["后面有问号",{"2":{"41":1}}],["后面对变量",{"2":{"22":1}}],["后者是前者的子类型",{"2":{"29":1}}],["后续数组",{"2":{"28":1}}],["随着新成员的加入",{"2":{"28":1}}],["而不需要在运行时发现错误",{"2":{"60":1}}],["而不是类型名称",{"2":{"6":1}}],["而是对语言和运行时的扩展",{"2":{"48":1}}],["而有所不同",{"2":{"28":1}}],["推断类型时",{"2":{"56":1}}],["推断类型为",{"2":{"28":4,"37":2}}],["推断为number",{"2":{"28":2}}],["推断为",{"2":{"28":2}}],["推断行为会因为值的不同",{"2":{"28":1}}],["推断函数返回类型",{"0":{"3":1}}],["livedangerously",{"2":{"57":2}}],["left",{"2":{"49":3,"50":4}}],["length",{"2":{"44":2}}],["let",{"2":{"1":2,"2":1,"3":2,"5":2,"7":1,"8":1,"10":1,"13":1,"22":2,"24":11,"25":8,"27":5,"31":1,"35":2,"36":3,"37":7,"38":1,"39":1,"51":4,"56":5,"57":1}}],["log",{"2":{"38":6,"57":2,"58":2}}],["lt",{"2":{"27":2,"30":6,"33":2,"53":5,"55":4}}],["接口提示",{"2":{"60":1}}],["接口",{"2":{"27":1,"45":1}}],["内置的基本类型之一",{"2":{"56":1}}],["内置的",{"2":{"27":1}}],["内置对象原生的属性和方法",{"2":{"16":1}}],["另一种写法是使用",{"2":{"27":1}}],["另外",{"2":{"15":1,"58":1}}],["时",{"2":{"26":1}}],["与大多数",{"2":{"48":1}}],["与",{"0":{"26":1},"2":{"29":1,"42":1}}],["唯一一个",{"2":{"25":1}}],["底层类型",{"2":{"25":2}}],["把这种情况称为",{"2":{"25":1}}],["把错误留到运行时",{"2":{"22":1}}],["因此",{"2":{"25":1,"44":1}}],["因为",{"2":{"18":1,"36":1,"44":1,"55":1}}],["任何类型都包含了",{"2":{"25":1}}],["任何其他类型都可以赋值为",{"0":{"18":1},"2":{"18":1}}],["为",{"2":{"26":1,"58":1,"60":1}}],["为什么",{"2":{"25":1}}],["为了解决这个问题",{"2":{"36":1}}],["为了解决",{"2":{"23":1}}],["为了避免这种情况",{"2":{"18":1}}],["各种其他类型的变量都可以赋值为",{"2":{"25":1}}],["空集是任何集合的子集",{"2":{"25":1}}],["空类型",{"2":{"25":1}}],["空对象来代替",{"2":{"15":1}}],["凡是需要设为",{"2":{"24":1}}],["一般用于函数的返回类型",{"2":{"59":1}}],["一般使用",{"2":{"53":1}}],["一般来说",{"2":{"24":1}}],["一旦发现符合某个类型声明",{"2":{"44":1}}],["一致",{"2":{"42":1}}],["一样",{"2":{"35":1}}],["一样自由",{"2":{"23":1}}],["一种是在数组成员的类型后面加上一对方括号",{"2":{"27":1}}],["right",{"2":{"49":3,"50":4}}],["radius",{"2":{"47":2}}],["r",{"2":{"24":2}}],["reverse",{"2":{"44":20}}],["repeat",{"2":{"40":5}}],["readonlyarray",{"2":{"30":2}}],["readonly",{"0":{"43":1},"2":{"29":4,"30":5,"33":4,"43":3}}],["result",{"2":{"3":2}}],["return",{"2":{"3":2,"21":2,"38":2,"39":2,"41":4,"42":4,"44":6,"58":4,"59":2}}],["确保不会出错",{"2":{"24":1}}],["答案是",{"2":{"54":1}}],["答案是只有经过",{"2":{"24":1}}],["答案是否定的",{"2":{"1":1}}],["怎么才能使用",{"2":{"24":1}}],["怎么使用都可以",{"2":{"20":1}}],["那就是连续进行两次类型断言",{"2":{"55":1}}],["那么能在",{"2":{"54":1}}],["那么我们就可以通过类型断言来实现收窄类型范围",{"2":{"53":1}}],["那么",{"2":{"24":1,"49":1}}],["那是不是要我们每次声明变量的时候都要进行类型声明呢",{"2":{"1":1}}],["0",{"2":{"24":2,"29":6,"30":6,"42":10,"43":4,"44":6}}],["0xffffn",{"2":{"9":2}}],["value是一种简写形式",{"2":{"58":1}}],["value",{"2":{"53":4,"58":14}}],["var",{"2":{"39":2}}],["void",{"0":{"26":1},"2":{"26":4,"38":5,"58":1}}],["v3",{"2":{"24":4,"25":2}}],["v2",{"2":{"24":6,"25":2}}],["v1",{"2":{"24":6,"25":2}}],["v",{"2":{"24":6}}],["取反运算",{"2":{"24":1}}],["运算符可以取出",{"2":{"52":1}}],["运算符这几种",{"2":{"24":1}}],["运算符和",{"2":{"24":1}}],["运算符",{"0":{"52":1},"2":{"24":1}}],["运算符==",{"2":{"24":1}}],["运行就报错",{"2":{"18":1}}],["运行就报错const",{"2":{"18":1}}],["主要有以下几个限制",{"2":{"24":1}}],["world",{"2":{"23":2}}],["4",{"2":{"28":2,"49":1}}],["42",{"2":{"23":2}}],["456function",{"2":{"42":1}}],["456",{"2":{"4":2,"5":2,"42":3}}],["可选参数与默认值不能同时使用",{"2":{"42":1}}],["可选参数",{"0":{"41":1},"1":{"42":1}}],["可以避免经典的错误",{"2":{"60":1}}],["可以将这个值推断为常量",{"2":{"56":1}}],["可以将参数颠倒输出",{"2":{"44":1}}],["可以多种继承",{"2":{"47":2}}],["可以使用",{"2":{"47":1}}],["可以继承其他的类型",{"2":{"46":1}}],["可以在编译阶段就发现大部分的错误",{"2":{"60":1}}],["可以在函数定义时",{"2":{"43":1}}],["可以在数组类型的前面加上",{"2":{"29":1}}],["可以赋值为",{"2":{"41":1}}],["可以赋值为各种类型的值",{"2":{"23":1}}],["可以不一致",{"2":{"38":1}}],["可以用于所有使用父类型的场合",{"2":{"29":1}}],["可以是无限数量的成员也可以是零成员",{"2":{"27":1}}],["可以看作是一种类型约定",{"2":{"45":1}}],["可以看作是更安全的",{"2":{"24":1}}],["可以看到",{"2":{"28":1}}],["可以看成是严格版的",{"2":{"23":1}}],["可能是任意类型",{"2":{"23":1}}],["表示这是只读参数",{"2":{"43":1}}],["表示该值不是",{"2":{"57":1}}],["表示该参数的类型实际上是",{"2":{"41":1}}],["表示该参数可以省略",{"2":{"41":1}}],["表示该成员是可选的",{"2":{"31":1}}],["表示单个值",{"2":{"36":1}}],["表示",{"2":{"35":1}}],["表示元组",{"2":{"32":1}}],["表示永远不存在的值的类型",{"2":{"26":1}}],["表示没有任何类型",{"2":{"26":1}}],["表示一个从来不会优雅的返回的函数时",{"2":{"26":1}}],["表示类型不确定",{"2":{"23":1}}],["表示未定义",{"2":{"13":1}}],["含义相同",{"2":{"23":1}}],["引入了",{"2":{"23":1}}],["实际类型可以断言为一个更加宽泛的类型",{"2":{"54":1}}],["实际的值是一个字符串",{"2":{"22":1}}],["实际上会关闭这个变量的类型检查",{"2":{"20":1}}],["导致其他变量出错",{"2":{"22":1}}],["它可以防止大量的",{"2":{"60":1}}],["它可以赋值给其他任何类型的变量",{"2":{"22":1}}],["它只是一个修饰符",{"2":{"58":1}}],["它必须与前面已有的重载声明兼容",{"2":{"44":1}}],["它就会等于默认值",{"2":{"42":1}}],["它有可能为",{"2":{"41":1}}],["它们的值都是不一样的",{"2":{"36":1}}],["它们各自都只有一个值",{"2":{"13":1}}],["它表示单个的",{"2":{"36":1}}],["它表示成员类型可以自由设置的数组",{"2":{"31":1}}],["它的类型写法与普通函数类似",{"2":{"40":1}}],["它的成员数量可能有两个",{"2":{"31":1}}],["它的返回值为",{"2":{"26":2}}],["它不能直接使用",{"2":{"24":1}}],["它与",{"2":{"23":1}}],["污染其他具有正确类型的变量",{"2":{"22":1}}],["污染",{"2":{"22":1,"23":1}}],["带来的污染问题",{"0":{"22":1}}],["打开该选项",{"2":{"21":1}}],["还有一个很大的问题",{"2":{"22":1}}],["还提供了一个编译选项",{"2":{"21":1}}],["还是小写的",{"2":{"16":1}}],["显然这是一个很糟糕的情况",{"2":{"21":1}}],["无法推断出他们的类型",{"2":{"21":1}}],["无论是大写的",{"2":{"16":1}}],["由于元组的成员都是数值索引",{"2":{"32":1}}],["由于需要声明每个成员的类型",{"2":{"31":1}}],["由于成员的类型可以不一样",{"2":{"31":1}}],["由于成员数量可以动态变化",{"2":{"27":1}}],["由于数组的初始值不为空",{"2":{"28":1}}],["由于不存在任何属于",{"2":{"25":1}}],["由于",{"2":{"21":1}}],["对应不同的函数实现",{"2":{"44":1}}],["对于那些可能为空的变量",{"2":{"57":1}}],["对于那些类型不明显的变量一定要显式声明类型",{"2":{"21":1}}],["对于",{"2":{"44":1}}],["对于开发者没有指定类型",{"2":{"21":1}}],["对象编译阶段不会报错",{"2":{"18":1}}],["对象类型",{"2":{"15":2}}],["对象字面量",{"2":{"4":1}}],["顶层类型",{"2":{"20":1,"25":1}}],["认为",{"2":{"20":1}}],["总之",{"2":{"20":1,"25":1}}],["quot",{"2":{"18":8,"51":4}}],["join",{"2":{"44":2}}],["jsx",{"2":{"53":1}}],["jsconst",{"2":{"29":1}}],["json",{"2":{"18":2}}],["javascript",{"2":{"1":1,"6":3,"12":1,"15":1,"16":2,"18":2,"27":1,"29":1,"31":1,"42":1,"44":1,"48":2,"56":8,"60":4}}],["idea",{"2":{"60":1}}],["id",{"2":{"53":1}}],["if",{"2":{"24":2,"44":2,"58":6,"59":2}}],["interface",{"0":{"45":1,"46":1,"47":2},"1":{"46":1,"47":2},"2":{"39":2,"45":1,"46":1,"47":7}}],["instanceof",{"2":{"24":1}}],["index",{"2":{"18":2}}],["isstring",{"2":{"58":8,"59":4}}],["ismen",{"2":{"7":2}}],["is",{"0":{"59":1},"2":{"2":2,"3":2,"44":2,"58":8,"59":5,"60":1}}],["提供基于数字和字符串的枚举",{"2":{"48":1}}],["提供了非空断言",{"2":{"57":1}}],["提供了一种特殊的类型断言",{"2":{"56":1}}],["提供了一个编译选项",{"2":{"18":1}}],["提供了两个专门的范型",{"2":{"30":1}}],["提示",{"2":{"3":1}}],["方法",{"2":{"18":1}}],["但有一些附加功能",{"2":{"60":1}}],["但不能断言为一个完全无关的类型",{"2":{"54":1}}],["但我们知道通过",{"2":{"53":1}}],["但是实际上是",{"2":{"41":1}}],["但是无法表示某一个具体的",{"2":{"36":1}}],["但是成员数量是不确定的",{"2":{"27":1}}],["但是除了",{"2":{"26":1}}],["但是",{"2":{"25":1,"26":1,"28":1,"36":1,"37":1,"38":1,"41":1,"44":2,"54":1}}],["但是它的使用有一些限制",{"2":{"23":1}}],["但是它被赋值为",{"2":{"22":1}}],["但是有时候",{"2":{"18":1}}],["但在运行阶段",{"2":{"18":1}}],["赋值给",{"2":{"18":1}}],["赋值时推断",{"0":{"2":1}}],["也是一种类型保护",{"2":{"59":1}}],["也是可以做到的",{"2":{"55":1}}],["也称为断言签名",{"2":{"58":1}}],["也可以断言为一个更加精确的类型",{"2":{"54":1}}],["也可以是数组",{"2":{"44":1}}],["也可以推断函数的返回类型",{"2":{"3":1}}],["也会触发默认值",{"2":{"42":1}}],["也就是说",{"2":{"31":2}}],["也就是动态变化的",{"2":{"27":1}}],["也检查不出问题",{"2":{"22":1}}],["也不利于发挥类型系统的优势",{"2":{"18":1}}],["就不进行任何操作",{"2":{"58":1}}],["就不再往下检查了",{"2":{"44":1}}],["就不能省略",{"2":{"41":1}}],["就不能赋值给其他类型",{"2":{"18":1}}],["就用",{"2":{"36":1}}],["就像",{"2":{"35":1}}],["就推断成员类型为",{"2":{"28":1}}],["就会抛出错误",{"2":{"58":1}}],["就会推断数组成员的类型",{"2":{"28":1}}],["就会认为",{"2":{"21":1}}],["就会认为该变量的类型为",{"2":{"21":1}}],["就相应规定",{"2":{"25":1}}],["就是可选的",{"2":{"42":1}}],["就是缩小",{"2":{"24":1}}],["就是它会",{"2":{"22":1}}],["就是为",{"2":{"1":1}}],["就报错了",{"2":{"18":1}}],["就表示开发者想要自己来处理这些代码",{"2":{"20":1}}],["就表示值为空",{"2":{"18":1}}],["就表示还没有赋值",{"2":{"18":1}}],["中断程序执行",{"2":{"58":1}}],["中进行类型断言的条件是什么呢",{"2":{"54":1}}],["中文译为",{"2":{"45":1}}],["中",{"2":{"29":1}}],["中数组的成员数量是不做限制的",{"2":{"27":1}}],["中的写法",{"2":{"18":1}}],["中变量如果等于",{"2":{"18":1}}],["中是内置对象",{"2":{"6":1}}],["在不严重破坏代码的情况下",{"2":{"60":1}}],["在字符串枚举中",{"2":{"50":1}}],["在参数类型前面加上",{"2":{"43":1}}],["在体操类型中可能用到",{"2":{"32":1}}],["在",{"2":{"18":2,"26":1,"29":1,"35":1}}],["正确function",{"2":{"41":1}}],["正确let",{"2":{"18":1,"20":1,"23":1,"24":1,"27":1}}],["正确",{"2":{"18":3,"20":5,"23":5,"24":3,"27":1,"36":2,"41":1}}],["正因为",{"2":{"3":1}}],["或者",{"2":{"58":1}}],["或者写成",{"2":{"55":2}}],["或者总是抛出错误",{"2":{"26":1}}],["或",{"0":{"18":1},"2":{"18":1}}],["既是值也是类型",{"2":{"17":1}}],["都会报错",{"2":{"58":1}}],["都不会报错",{"2":{"20":1}}],["都只包含",{"2":{"16":1}}],["都是",{"2":{"15":1}}],["注意",{"2":{"16":1,"30":1,"31":1,"44":1,"52":1}}],["建议总是使用小写类型",{"2":{"16":1}}],["大部分的函数看类型的定义就知道如何使用",{"2":{"60":1}}],["大多数时候",{"2":{"16":1}}],["大写的",{"2":{"15":1}}],["只知道将返回某种",{"2":{"53":1}}],["只能用",{"2":{"36":1}}],["只能进行比较运算",{"2":{"24":1}}],["只读参数",{"0":{"43":1}}],["只读元组",{"0":{"33":1}}],["只读数组不能和数组的范型写法一起使用",{"0":{"30":1}}],["只读数组",{"0":{"29":1},"1":{"30":1}}],["只有",{"2":{"25":1,"58":1}}],["只有对象",{"2":{"16":1}}],["只要推断出",{"2":{"21":1}}],["只要开发者使用了",{"2":{"20":1}}],["只要句法正确",{"2":{"20":1}}],["只要打开这个选项",{"2":{"18":1}}],["只希望包含真正的对象",{"2":{"16":1}}],["只包含对象",{"2":{"16":1}}],["报错function",{"2":{"41":1,"44":1}}],["报错const",{"2":{"29":1,"36":1,"54":1}}],["报错let",{"2":{"16":1,"24":2,"28":1,"31":1,"41":1,"56":1}}],["报错",{"2":{"16":5,"24":10,"25":2,"28":1,"29":5,"30":2,"31":1,"36":3,"41":2,"42":2,"43":2,"44":1,"54":1,"56":1,"58":2}}],["不会在运行时进行类型检查",{"2":{"54":1}}],["不会对数组边界进行检查",{"2":{"27":1}}],["不过",{"2":{"53":1}}],["不行",{"2":{"38":1}}],["不放会报错",{"2":{"38":1}}],["不同类型",{"2":{"34":1}}],["不允许修改",{"2":{"33":1}}],["不像",{"2":{"23":1}}],["不报错function",{"2":{"25":1}}],["不报错",{"2":{"21":2,"25":5}}],["不使用大写类型",{"2":{"16":1}}],["不希望包含原始类型",{"2":{"16":1}}],["不包括原始类型",{"2":{"16":1}}],["不能有冲突",{"2":{"44":1}}],["不能有其他代码",{"2":{"44":1}}],["不能用",{"2":{"36":1}}],["不能直接调用",{"2":{"24":1}}],["不能直接赋值给其他类型的变量",{"2":{"24":3}}],["不能把",{"2":{"4":2,"5":2}}],["不能将",{"2":{"3":2}}],["即不等于",{"2":{"58":1}}],["即不可能返回任何值",{"2":{"25":1}}],["即不可能有这样的值",{"2":{"25":1}}],["即可能等于",{"2":{"57":1}}],["即可以使用字面量表示的对象",{"2":{"16":1}}],["即把",{"2":{"56":1}}],["即这个类型是三种值的联合类型",{"2":{"32":1}}],["即索引类型都是",{"2":{"32":1}}],["即数组的各个成员的类型可以不同",{"2":{"31":1}}],["即使有明显的类型错误",{"2":{"20":1}}],["即还未给出定义",{"2":{"13":1}}],["小写的",{"2":{"16":1}}],["所做的一切",{"2":{"60":1}}],["所有可选成员必须在必选成员之后",{"2":{"31":1}}],["所有可以转为对象的值",{"2":{"15":1}}],["所有成员的类型必须相同",{"2":{"27":1}}],["所谓",{"2":{"24":1}}],["所以烈性谓语",{"2":{"59":1}}],["所以如果返回除了",{"2":{"58":1}}],["所以可以作为两种完全无关的类型的中介",{"2":{"55":1}}],["所以可以像下面这样读取",{"2":{"32":1}}],["所以除非确切的知道变量的数据类型",{"2":{"54":1}}],["所以类型最宽的声明应该放在最后面",{"2":{"44":1}}],["所以类型可以省略不写",{"2":{"36":1}}],["所以这个类型的变量是不能修改值的",{"2":{"36":1}}],["所以写不出只包含单个",{"2":{"36":1}}],["所以返回",{"2":{"32":1}}],["所以返回值类型可以写成",{"2":{"25":1}}],["所以大多数情况下",{"2":{"31":1}}],["所以元组必须明确声明每个成员的类型",{"2":{"31":1}}],["所以子类型",{"2":{"29":1}}],["所以该类型被称为",{"2":{"25":1}}],["所以就不对",{"2":{"20":1}}],["所以",{"2":{"16":1,"27":1}}],["所以通常使用",{"2":{"15":1}}],["这里是string",{"2":{"58":2,"59":2}}],["这里的",{"2":{"52":1}}],["这不是对",{"2":{"48":1}}],["这意味着",{"2":{"44":1}}],["这种机制被称为",{"2":{"53":1}}],["这种根据参数类型不同",{"2":{"44":1}}],["这种写法和函数重载结合起来",{"2":{"39":1}}],["这种写法就是对象写法的翻版",{"2":{"39":1}}],["这也是它的值类型",{"2":{"36":1}}],["这也跟集合论有关",{"2":{"25":1}}],["这个字面量来表示",{"2":{"36":1}}],["这时",{"2":{"28":1}}],["这与",{"2":{"23":1}}],["这就叫",{"2":{"44":1}}],["这就叫类型推断",{"2":{"1":1}}],["这就是不宜使用",{"2":{"22":1}}],["这样问题就留到运行时才会暴露",{"2":{"22":1}}],["这样就后续就不会对",{"2":{"21":1}}],["这样设计的目的是为了跟",{"2":{"18":1}}],["这并不是开发者想要的行为",{"2":{"18":1}}],["这两个值不能转为对象",{"2":{"15":1}}],["除了创建具有成员属性名称的对象之外",{"2":{"51":1}}],["除了",{"2":{"15":1,"18":1,"24":1}}],["事实上",{"2":{"15":1}}],["函数体内部就需要判断参数的类型及个数",{"2":{"44":1}}],["函数只能有一个实现",{"2":{"44":1}}],["函数重载的每个类型声明之间",{"2":{"44":1}}],["函数重载",{"0":{"44":1},"2":{"44":2}}],["函数的参数默认值写法",{"2":{"42":1}}],["函数的参数要放在圆括号里面",{"2":{"38":1}}],["函数的可选参数只能在参数列表的尾部",{"2":{"41":1}}],["函数的类型声明",{"2":{"38":1}}],["函数的返回类型通常是省略不写的",{"2":{"3":1}}],["函数进行类型检查了",{"2":{"21":1}}],["函数可以赋值给",{"2":{"16":1}}],["函数",{"2":{"16":1,"25":1,"44":1}}],["函数类型也可以使用",{"2":{"39":1}}],["函数类型可以采用对象的写法",{"0":{"39":1}}],["函数类型里面的参数名与实际参数名",{"2":{"38":1}}],["函数类型",{"2":{"15":1}}],["函数类型let",{"2":{"15":1}}],["htmlcanvaselement",{"2":{"53":3}}],["htmlelement",{"2":{"53":1}}],["hi",{"2":{"15":2,"16":2,"44":2}}],["hello",{"2":{"4":2,"5":2,"22":2,"23":2,"24":2,"38":12,"54":2,"55":2}}],["几乎包括了所有的值",{"2":{"15":1}}],["以外的值",{"2":{"58":1}}],["以",{"2":{"58":1}}],["以及类型声明与函数实现的类型之间",{"2":{"44":1}}],["以后可能会有定义",{"2":{"13":1}}],["以下所有成员都会自动递增",{"2":{"49":1}}],["以下",{"2":{"6":1}}],["是因为转换通常意味着某种运行时的支持",{"2":{"54":1}}],["是必需的",{"2":{"52":1}}],["是必须的",{"2":{"38":1}}],["是值",{"2":{"49":4}}],["是对象的模版",{"2":{"45":1}}],["是按照顺序进行检查的",{"2":{"44":1}}],["是可选的",{"2":{"41":1}}],["是",{"2":{"31":1,"60":1}}],["是一个具体的数值",{"2":{"36":1}}],["是一个",{"2":{"22":2}}],["是两种独立类型",{"2":{"13":1}}],["是继承了",{"2":{"6":1}}],["z",{"2":{"12":2}}],["30",{"2":{"34":2}}],["3",{"2":{"12":2,"21":2,"27":8,"28":2,"29":2,"44":4,"49":1}}],["39",{"2":{"2":12,"3":8,"4":4,"5":4,"10":4,"15":4,"16":4,"20":4,"22":4,"23":4,"24":8,"25":4,"28":8,"31":20,"34":8,"38":12,"44":28,"50":16,"52":16,"53":4,"54":4,"55":4,"56":16,"58":24,"59":4}}],["根据asserts断言分析出后面的str为string",{"2":{"58":2}}],["根据当前的",{"2":{"58":1}}],["根据参数类型的不同",{"2":{"44":1}}],["根据",{"2":{"12":1}}],["值变量的类型",{"2":{"37":1}}],["值时",{"2":{"36":1}}],["值的那种值类型",{"2":{"36":1}}],["值不存在字面量",{"2":{"36":1}}],["值",{"2":{"11":1,"36":3,"53":4,"58":1}}],["yell",{"2":{"58":2,"59":2}}],["y",{"2":{"9":2,"12":2,"21":7,"22":10,"35":4,"36":2,"37":4,"38":4,"39":6,"42":4}}],["xxxx",{"2":{"58":1}}],["xxx",{"2":{"58":1}}],["xiaomimg",{"2":{"10":2}}],["x",{"2":{"9":2,"11":2,"12":2,"13":2,"20":8,"21":7,"22":6,"23":9,"25":2,"31":4,"35":4,"36":6,"37":12,"38":2,"39":6,"41":14,"42":10,"44":6,"54":2,"55":2,"57":4}}],["两个布尔值",{"2":{"7":1}}],["和",{"0":{"17":1},"1":{"18":1},"2":{"7":1,"13":1,"14":1,"15":1,"17":1,"18":2,"21":3,"25":1,"27":1,"35":1,"57":2,"58":1}}],["首字母大写的",{"2":{"6":1}}],["s2",{"2":{"56":2}}],["s1",{"2":{"56":2}}],["success",{"2":{"55":1}}],["successconst",{"2":{"55":1}}],["shape",{"2":{"47":4}}],["style",{"2":{"47":4}}],["stateprefix",{"2":{"44":2}}],["state",{"2":{"44":6}}],["str",{"2":{"40":4,"44":4,"58":14,"59":12}}],["strictnullchecking",{"2":{"26":1}}],["strictnullchecks",{"2":{"18":4}}],["strictnullcheck",{"2":{"18":1}}],["stringorarray",{"2":{"44":8}}],["string|number|date",{"2":{"32":2}}],["string|number|datetype",{"2":{"32":1}}],["string|number",{"2":{"28":2}}],["string",{"0":{"10":1},"2":{"1":4,"2":4,"3":6,"4":2,"5":2,"6":2,"10":3,"15":2,"25":2,"28":1,"31":10,"32":4,"33":4,"34":2,"35":1,"38":9,"40":4,"44":27,"47":4,"56":2,"57":2,"58":18,"59":4}}],["slice",{"2":{"44":2}}],["split",{"2":{"44":2}}],["s",{"2":{"31":2,"56":4}}],["songname",{"2":{"10":2}}],["symbol",{"0":{"11":1,"35":1,"36":1,"37":1},"1":{"36":1,"37":1},"2":{"6":1,"11":6,"35":13,"36":34,"37":23}}],["种是",{"2":{"6":1}}],["8",{"2":{"6":1}}],["适用于解构中",{"2":{"5":1}}],["bug",{"2":{"60":1}}],["bob",{"2":{"34":2}}],["bottom",{"2":{"25":1}}],["boolean",{"0":{"7":1},"2":{"6":2,"7":3,"15":2,"24":2,"25":2,"31":2,"34":2,"44":4}}],["bashtsc",{"2":{"18":1}}],["bigint",{"0":{"9":1},"2":{"6":1,"9":5}}],["b",{"2":{"4":2,"5":2,"31":4,"36":4,"39":6,"41":2,"52":6}}],["f2",{"2":{"42":2}}],["f",{"2":{"25":10,"38":4,"41":14,"42":4,"44":8}}],["falselet",{"2":{"35":1}}],["false",{"2":{"7":3,"26":1,"34":2,"35":1,"58":1}}],["foo",{"2":{"4":4,"5":4,"12":2,"15":2,"16":2,"20":2,"24":4,"25":2,"27":2,"52":2}}],["function",{"2":{"3":2,"21":2,"38":7,"39":2,"42":3,"43":1,"44":13,"57":1,"58":6,"59":3,"60":1}}],["的功能",{"2":{"60":1}}],["的优势具体表现为",{"2":{"60":1}}],["的主要原因是为",{"2":{"60":1}}],["的超集",{"2":{"60":1}}],["的形式来确定函数的返回类型",{"2":{"58":1}}],["的继承",{"0":{"46":1},"1":{"47":1}}],["的两种参数情况",{"2":{"44":1}}],["的参数",{"2":{"38":1,"41":1}}],["的函数类型",{"0":{"38":1},"1":{"39":1,"40":1,"41":1,"42":1,"43":1,"44":1}}],["的一项功能",{"2":{"48":1}}],["的一个子类型",{"2":{"36":1}}],["的一系列的数值运算",{"2":{"22":1}}],["的数据结构时",{"2":{"34":1}}],["的数组类型",{"0":{"27":1},"1":{"28":1,"29":1,"30":1}}],["的所有数值索引的成员类型",{"2":{"32":1}}],["的最后两个成员是可选的",{"2":{"31":1}}],["的区分方法就是",{"2":{"31":1}}],["的区别",{"0":{"26":1}}],["的元组类型",{"0":{"31":1},"1":{"32":1,"33":1,"34":1}}],["的变量就会报错",{"2":{"28":1}}],["的运行结果",{"2":{"25":1}}],["的值",{"2":{"25":1}}],["的使用限制",{"0":{"24":1}}],["的行为一致",{"2":{"23":1}}],["的行为保持一致",{"2":{"18":1}}],["的",{"0":{"19":1,"35":1,"45":1,"48":1},"1":{"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"36":1,"37":1,"46":1,"47":1,"49":1,"50":1,"51":1,"52":1}}],["的对象类型分为",{"2":{"14":1}}],["的设计",{"2":{"12":1}}],["的类型断言",{"0":{"53":1},"1":{"54":1,"55":1,"56":1,"57":1,"58":1,"59":1}}],["的类型级别的拓展",{"2":{"48":1}}],["的类型声明方法是",{"2":{"44":1}}],["的类型使用",{"2":{"35":1}}],["的类型是",{"2":{"23":1}}],["的类型",{"2":{"6":1}}],["的类型设计",{"2":{"6":1}}],["的类型推断",{"0":{"37":1},"2":{"3":1}}],["的基础类型",{"0":{"6":1},"1":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"2":{"6":1}}],["的推断也适用于结构化的存在",{"2":{"4":1}}],["25",{"2":{"34":2}}],["24",{"2":{"18":2}}],["2015",{"2":{"35":1}}],["20",{"2":{"8":2}}],["2",{"2":{"3":2,"12":2,"15":2,"16":2,"21":2,"27":6,"28":2,"29":6,"31":2,"44":4,"49":1}}],["+",{"2":{"3":2,"12":2,"15":2,"16":2,"21":2,"24":6,"38":6,"39":4}}],["asserts",{"0":{"58":1,"59":1},"2":{"58":13}}],["assignable",{"2":{"2":2,"3":2}}],["as",{"0":{"56":1},"2":{"53":8,"54":2,"55":8,"56":4}}],["args",{"2":{"44":6}}],["arr",{"2":{"27":4,"28":14,"29":12,"30":2,"43":4,"44":4}}],["arr2",{"2":{"27":2}}],["arr1",{"2":{"27":2}}],["arraysum",{"2":{"43":2}}],["array",{"2":{"27":3,"30":2}}],["alice",{"2":{"34":2}}],["a2",{"2":{"30":2}}],["a1",{"2":{"30":2}}],["abc",{"2":{"28":2,"44":2}}],["amp",{"2":{"24":2,"44":4}}],["any",{"0":{"19":1,"20":1,"22":1},"1":{"20":1,"21":2,"22":2,"23":1,"24":1,"25":1,"26":1},"2":{"18":1,"20":7,"21":6,"22":5,"23":5,"24":4,"25":1,"28":2,"38":1,"44":19,"55":2,"58":2,"59":2}}],["age",{"2":{"8":2,"18":6,"32":2}}],["a",{"2":{"4":4,"5":6,"15":4,"16":4,"24":12,"31":6,"36":4,"39":6,"41":2,"44":2,"51":10,"52":6,"58":6,"60":1}}],["add",{"2":{"3":4,"21":5,"39":6}}],["10",{"2":{"24":2,"41":2}}],["100",{"2":{"2":2}}],["1",{"2":{"3":2,"12":4,"15":6,"16":6,"20":2,"21":4,"24":10,"27":6,"28":2,"29":6,"30":6,"31":2,"32":2,"44":10,"49":4}}],["123n",{"2":{"9":2}}],["123",{"2":{"2":2,"4":2,"5":2,"12":2,"15":2,"16":2,"22":2,"24":4,"25":2,"28":2}}],["将这种类型称为",{"2":{"20":1}}],["将",{"2":{"2":2,"29":1}}],["==",{"2":{"24":1,"58":6}}],["===",{"2":{"24":5,"35":2,"36":2,"44":2,"59":2}}],["=",{"2":{"2":4,"3":2,"4":4,"5":6,"7":2,"8":2,"9":4,"10":2,"11":2,"12":8,"13":2,"15":14,"16":14,"18":8,"20":6,"22":4,"23":6,"24":23,"25":8,"27":8,"28":4,"29":8,"30":6,"31":10,"32":8,"33":4,"34":4,"35":4,"36":12,"37":12,"38":11,"39":6,"40":4,"41":2,"42":8,"43":2,"44":10,"49":2,"50":8,"51":4,"52":6,"53":2,"54":2,"55":2,"56":8}}],["new",{"2":{"25":2,"58":6}}],["never",{"0":{"19":1,"25":1},"1":{"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":2},"2":{"25":15,"26":5}}],["no",{"2":{"57":2}}],["noimplicitany",{"2":{"21":1}}],["not",{"2":{"2":2,"3":2,"58":6,"60":1}}],["n",{"2":{"12":4,"24":4}}],["null",{"0":{"13":1,"17":1,"18":1},"1":{"18":1},"2":{"6":1,"13":1,"15":1,"17":1,"18":5,"57":4,"58":2}}],["num2",{"2":{"3":4}}],["num1",{"2":{"3":4}}],["numbertype",{"2":{"32":1}}],["number",{"0":{"8":1},"2":{"2":12,"3":10,"4":2,"5":2,"6":2,"8":3,"12":2,"15":4,"16":2,"18":2,"22":3,"24":4,"25":4,"27":6,"28":3,"29":5,"30":6,"31":12,"32":9,"33":4,"34":2,"35":1,"38":6,"39":12,"40":2,"41":14,"42":10,"43":2,"44":2,"47":2,"52":1,"54":2,"55":2,"57":2}}],["nameofa",{"2":{"51":2}}],["name",{"2":{"1":4,"44":10,"47":2,"57":2}}],["举例说明",{"2":{"2":1}}],["检查",{"2":{"1":1}}],["会进行控制流分析",{"2":{"58":1}}],["会被类型推断为",{"2":{"56":1}}],["会有不同的函数行为",{"2":{"44":1}}],["会更加优雅",{"2":{"39":1}}],["会理解成函数有一个名叫",{"2":{"38":1}}],["会推断某个",{"2":{"37":1}}],["会自动修改推断的数组类型",{"2":{"28":1}}],["会自己进行类型推断",{"2":{"1":1}}],["会抛出错误",{"2":{"25":1}}],["会将add函数的返回类型推断为",{"2":{"3":2}}],["会将",{"2":{"2":2}}],["会根据一些简单的规则推断",{"2":{"1":1}}],["类型系统是最好的文档",{"2":{"60":1}}],["类型判断函数",{"2":{"59":1}}],["类型是人为添加的一种编程约束和用法提示",{"2":{"61":1}}],["类型是所有其他类型的父类型",{"2":{"55":1}}],["类型是任何其他类型所共有的",{"2":{"25":1}}],["类型或",{"2":{"55":1}}],["类型断言要求实际的类型与断言的类型兼容",{"2":{"54":1}}],["类型断言会在编译时被移除",{"2":{"54":1}}],["类型断言纯粹是一个编译时语法",{"2":{"54":1}}],["类型断言之所以不称为类型转换",{"2":{"54":1}}],["类型断言和类型转换",{"0":{"54":1}}],["类型断言有两种语法",{"2":{"53":1}}],["类型断言用来告诉编译器你比它更了解这个类型",{"2":{"53":1}}],["类型断言",{"2":{"53":1}}],["类型显式设为",{"2":{"41":1}}],["类型里面的参数名",{"2":{"38":1}}],["类型为",{"2":{"28":1,"37":8}}],["类型推断为字符串",{"2":{"56":2}}],["类型推断为基本类型",{"2":{"56":2}}],["类型推断就不会更新",{"2":{"28":1}}],["类型推断的自动更新只会发生在初始值为空数组的情况",{"2":{"28":1}}],["类型推断问题",{"0":{"21":1}}],["类型可以被赋值",{"2":{"26":1}}],["类型可以赋值给任意其他类型呢",{"2":{"25":1}}],["类型可以看成是所有其他类型的全集",{"2":{"20":1}}],["类型let",{"2":{"25":1}}],["类型缩小",{"2":{"24":2}}],["类型变量才可以使用",{"2":{"24":1}}],["类型变量呢",{"2":{"24":1}}],["类型变量能够进行的运算是有限的",{"2":{"24":1}}],["类型变量的方法和属性",{"2":{"24":1}}],["类型跟",{"2":{"24":1}}],["类型带来的",{"2":{"23":1}}],["类型除了关闭类型检查",{"2":{"22":1}}],["类型进行任何限制",{"2":{"20":1}}],["类型表示没有任何限制",{"2":{"20":1}}],["类型不能赋值给",{"2":{"25":2}}],["类型不是对象",{"2":{"18":1}}],["类型不包括原始类型",{"2":{"16":1}}],["类型的概念",{"0":{"61":1}}],["类型的值是通过",{"2":{"35":1}}],["类型的地方",{"2":{"24":1}}],["类型的变量",{"2":{"24":1,"36":1,"37":2}}],["类型的不同之处在于",{"2":{"24":1}}],["类型的另一个主要原因",{"2":{"22":1}}],["类型的另一种写法为空对象",{"2":{"15":1}}],["类型的特殊性",{"0":{"17":1},"1":{"18":1}}],["类型代表",{"2":{"15":1,"16":1}}],["类型两种",{"2":{"14":1}}],["类型和",{"0":{"14":1},"1":{"15":1,"16":1},"2":{"24":1,"55":1}}],["类型包含了所有对象",{"2":{"12":1}}],["类型包含所有的",{"2":{"11":1,"36":1}}],["类型包含所有的大整数",{"2":{"9":1}}],["类型包含所有字符串",{"2":{"10":1}}],["类型包含所有整数和浮点数",{"2":{"8":1}}],["类型只包含一个值",{"2":{"13":1}}],["类型只包含",{"2":{"7":1}}],["类型const",{"2":{"4":1,"5":1}}],["类型就会报错",{"2":{"2":2,"21":1}}],["类型赋值给",{"2":{"2":2,"3":2,"4":2,"5":2}}],["类型声明写在箭头函数的定义里面",{"2":{"40":1}}],["类型声明并不是必须的",{"2":{"1":1}}],["类型声明和类型推断",{"0":{"1":1},"1":{"2":1,"3":1,"4":1,"5":1}}],["类型",{"0":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"19":1,"20":1,"23":1,"25":1,"35":1,"48":1},"1":{"15":1,"16":1,"20":1,"21":2,"22":2,"23":1,"24":2,"25":1,"26":2,"36":1,"37":1,"49":1,"50":1,"51":1,"52":1},"2":{"1":2,"2":2,"3":4,"4":1,"5":1,"15":8,"16":3,"20":1,"21":3,"22":2,"23":2,"24":2,"25":3,"26":2,"53":4,"55":1,"58":1}}],["变量就不能再改变值了",{"2":{"56":1}}],["变量断言为",{"2":{"56":1}}],["变量类型默认就是",{"2":{"36":1}}],["变量类型一旦设为",{"2":{"20":1}}],["变量",{"2":{"22":2,"23":1,"40":1,"56":1}}],["变量被推断为",{"2":{"21":2}}],["变量执行",{"2":{"18":1}}],["变量推断为",{"2":{"2":2}}],["变量的类型有两种写法",{"2":{"38":1}}],["变量的类型范围",{"2":{"24":1}}],["变量的类型为",{"2":{"21":1}}],["变量的类型",{"2":{"1":1}}],["变量声明为",{"2":{"1":2}}],["变量加上了类型声明",{"2":{"1":1}}],["给予完整的类型声明",{"2":{"44":1}}],["给予了类型声明",{"2":{"44":1}}],["给出参数的类型和返回值的类型",{"2":{"38":1}}],["给",{"2":{"1":2}}],["times",{"2":{"40":4}}],["tip",{"2":{"22":1,"32":1}}],["txt",{"2":{"38":15}}],["t",{"2":{"33":4,"55":4,"58":2}}],["tupleel",{"2":{"32":2}}],["tuple",{"2":{"31":1,"32":10}}],["throw",{"2":{"25":2,"58":6}}],["truthy",{"2":{"58":1}}],["true",{"2":{"7":1,"15":2,"16":2,"18":2,"20":2,"23":2,"31":2,"34":2,"44":2,"58":2}}],["trim",{"2":{"24":2}}],["touppercase",{"2":{"58":2,"59":2}}],["tofixed",{"2":{"22":2,"57":2}}],["top",{"2":{"20":1}}],["tostring",{"2":{"18":3}}],["to",{"2":{"2":2,"3":2}}],["typesscript",{"2":{"48":1}}],["typescriptd",{"2":{"4":1}}],["typescript",{"0":{"0":1,"6":1,"19":1,"27":1,"31":1,"35":1,"38":1,"45":1,"48":1,"53":1,"60":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"28":1,"29":1,"30":1,"32":1,"33":1,"34":1,"36":1,"37":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"46":1,"47":1,"49":1,"50":1,"51":1,"52":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"61":1},"2":{"1":3,"2":2,"3":4,"6":2,"14":1,"18":1,"20":3,"21":4,"22":1,"23":1,"25":3,"27":4,"28":3,"29":2,"30":1,"31":2,"35":1,"36":1,"37":1,"38":2,"42":1,"44":2,"48":2,"53":3,"54":1,"56":2,"57":1,"58":1,"60":3}}],["typeof",{"2":{"24":3,"44":2,"52":3,"58":6,"59":2}}],["type",{"2":{"2":4,"3":4,"20":1,"25":1,"31":1,"32":4,"33":4,"34":1,"52":2,"53":4}}],["tsenum",{"2":{"49":1,"50":1,"51":1,"52":1}}],["tsreverse",{"2":{"44":1}}],["tsinterface",{"2":{"39":1,"47":1}}],["tstype",{"2":{"31":1,"32":2,"34":1}}],["tstsc",{"2":{"18":1}}],["tsfunction",{"2":{"25":1,"38":1,"41":3,"42":2,"43":1,"44":3,"57":1,"58":2,"59":1}}],["tsconfig",{"2":{"18":1}}],["tsconst",{"2":{"4":1,"5":1,"9":1,"11":1,"12":1,"18":1,"29":1,"30":1,"31":1,"36":2,"37":1,"40":1,"44":1,"53":1,"54":1,"55":1}}],["tslet",{"2":{"2":1,"7":1,"8":1,"10":1,"13":1,"15":1,"16":1,"18":1,"20":1,"22":1,"23":1,"24":4,"25":1,"27":2,"28":1,"31":2,"35":1,"37":1,"38":1,"39":1,"41":1,"56":1,"57":1}}],["ts",{"2":{"1":1,"3":1,"18":1,"21":1,"28":1,"30":1,"33":1,"36":1,"37":2,"38":1,"42":1,"53":1,"55":1,"56":1,"58":2}}],["代码最明显的特征",{"2":{"1":1}}],["基础类型",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1}}]],"serializationVersion":2}';export{t as default};
