import{_ as s,o as n,c as a,X as l}from"./chunks/framework.6625828e.js";const D=JSON.parse('{"title":"requestAnimationFrame和animtion的对比","description":"","frontmatter":{"title":"requestAnimationFrame和animtion的对比","author":"DBAAZzz","date":"2025/06/05 18:00","categories":["面试"],"tags":["requestAnimationFrame"]},"headers":[],"relativePath":"courses/面试/01-javascript/02-requestAnimationFrame和animtion的对比.md","filePath":"courses/面试/01-javascript/02-requestAnimationFrame和animtion的对比.md","lastUpdated":1749122284000}'),p={name:"courses/面试/01-javascript/02-requestAnimationFrame和animtion的对比.md"},o=l(`<p>CSS <code>Animation</code> 和 <code>requestAnimationFrame</code> 在实现动画时有很大差异，各有优劣势：</p><h2 id="性能对比" tabindex="-1">性能对比 <a class="header-anchor" href="#性能对比" aria-label="Permalink to &quot;性能对比&quot;">​</a></h2><h3 id="css-animation-更优" tabindex="-1">CSS Animation（更优） <a class="header-anchor" href="#css-animation-更优" aria-label="Permalink to &quot;CSS Animation（更优）&quot;">​</a></h3><p><strong>优势</strong>：</p><ul><li><strong>硬件加速</strong>：浏览器可以将动画交给 <code>GPU</code> 处理，避免占用主线程</li><li><strong>浏览器优化</strong>：浏览器内部高度优化，减少重绘和重排</li><li><strong>独立线程</strong>：动画在合成器线程执行，不受 <code>JavaScript</code> 阻塞影响</li><li><strong>自动优化</strong>：浏览器自动处理帧率匹配和性能调节</li></ul><p><strong>性能表现</strong>：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">/* 高性能 - 触发合成层 */</span></span>
<span class="line"><span style="color:#6CB6FF;">.element</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">transform</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">translateX</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">transition</span><span style="color:#ADBAC7;">: transform </span><span style="color:#6CB6FF;">1</span><span style="color:#F47067;">s</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">ease</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"><span style="color:#6CB6FF;">.element:hover</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">transform</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">translateX</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">100</span><span style="color:#F47067;">px</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">/* 高性能 - 触发合成层 */</span></span>
<span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">element</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">transform</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#998418;">translateX</span><span style="color:#999999;">(</span><span style="color:#2F798A;">0</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">transition</span><span style="color:#999999;">:</span><span style="color:#393A34;"> transform </span><span style="color:#2F798A;">1</span><span style="color:#AB5959;">s</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">ease</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">element</span><span style="color:#999999;">:</span><span style="color:#B07D48;">hover</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">transform</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#998418;">translateX</span><span style="color:#999999;">(</span><span style="color:#2F798A;">100</span><span style="color:#AB5959;">px</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="requestanimationframe" tabindex="-1">requestAnimationFrame <a class="header-anchor" href="#requestanimationframe" aria-label="Permalink to &quot;requestAnimationFrame&quot;">​</a></h3><p><strong>劣势</strong>：</p><ul><li><strong>主线程执行</strong>：在 JavaScript 主线程运行，可能被其他任务阻塞</li><li><strong>手动优化</strong>：需要开发者手动处理性能优化</li><li><strong>CPU 密集</strong>：复杂计算会影响整体性能</li></ul><h2 id="适用场景对比" tabindex="-1">适用场景对比 <a class="header-anchor" href="#适用场景对比" aria-label="Permalink to &quot;适用场景对比&quot;">​</a></h2><h3 id="css-animation-适合" tabindex="-1">CSS Animation 适合： <a class="header-anchor" href="#css-animation-适合" aria-label="Permalink to &quot;CSS Animation 适合：&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">/* 简单的状态变化 */</span></span>
<span class="line"><span style="color:#F47067;">@keyframes</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">slideIn</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">from</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">transform</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">translateX</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">-100</span><span style="color:#F47067;">%</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">  }</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">to</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">transform</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">translateX</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">  }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6CB6FF;">.slide</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">animation</span><span style="color:#ADBAC7;">: slideIn </span><span style="color:#6CB6FF;">0.3</span><span style="color:#F47067;">s</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">ease-out</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">/* 简单的状态变化 */</span></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#1E754F;">keyframes</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">slideIn</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">from</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">transform</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#998418;">translateX</span><span style="color:#999999;">(</span><span style="color:#2F798A;">-100</span><span style="color:#AB5959;">%</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">to</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">transform</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#998418;">translateX</span><span style="color:#999999;">(</span><span style="color:#2F798A;">0</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">slide</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">animation</span><span style="color:#999999;">:</span><span style="color:#393A34;"> slideIn </span><span style="color:#2F798A;">0.3</span><span style="color:#AB5959;">s</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">ease-out</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p><strong>适用情况</strong>：</p><ul><li>简单的 UI 动画（淡入淡出、滑动、旋转）</li><li>状态切换动画</li><li>循环动画</li><li>响应用户交互的简单动画</li></ul><h3 id="requestanimationframe-适合" tabindex="-1">requestAnimationFrame 适合： <a class="header-anchor" href="#requestanimationframe-适合" aria-label="Permalink to &quot;requestAnimationFrame 适合：&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 复杂的游戏动画</span></span>
<span class="line"><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">gameLoop</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">timestamp</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// 复杂的物理计算</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">updatePlayerPosition</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">checkCollisions</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">updateParticles</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">render</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">requestAnimationFrame</span><span style="color:#ADBAC7;">(gameLoop);</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 复杂的游戏动画</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">gameLoop</span><span style="color:#999999;">(</span><span style="color:#B07D48;">timestamp</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 复杂的物理计算</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">updatePlayerPosition</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">checkCollisions</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">updateParticles</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">render</span><span style="color:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">requestAnimationFrame</span><span style="color:#999999;">(</span><span style="color:#B07D48;">gameLoop</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p><strong>适用情况</strong>：</p><ul><li>复杂的交互动画</li><li>游戏开发</li><li>数据可视化</li><li>需要精确控制的动画</li><li>基于用户输入的实时动画</li></ul><h2 id="详细差异对比" tabindex="-1">详细差异对比 <a class="header-anchor" href="#详细差异对比" aria-label="Permalink to &quot;详细差异对比&quot;">​</a></h2><table><thead><tr><th>特性</th><th>CSS Animation</th><th>requestAnimationFrame</th></tr></thead><tbody><tr><td><strong>性能</strong></td><td>更好（GPU 加速）</td><td>较差（CPU 计算）</td></tr><tr><td><strong>流畅度</strong></td><td>更流畅</td><td>取决于代码质量</td></tr><tr><td><strong>控制精度</strong></td><td>有限</td><td>精确控制</td></tr><tr><td><strong>复杂度</strong></td><td>简单</td><td>复杂</td></tr><tr><td><strong>调试难度</strong></td><td>困难</td><td>容易</td></tr><tr><td><strong>兼容性</strong></td><td>需要前缀</td><td>需要 polyfill</td></tr></tbody></table><h2 id="性能测试示例" tabindex="-1">性能测试示例 <a class="header-anchor" href="#性能测试示例" aria-label="Permalink to &quot;性能测试示例&quot;">​</a></h2><p><strong>CSS 方式</strong>：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">.box</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">width</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">50</span><span style="color:#F47067;">px</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">height</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">50</span><span style="color:#F47067;">px</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">background</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">red</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/* 触发硬件加速 */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">will-change</span><span style="color:#ADBAC7;">: transform;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6CB6FF;">.move</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">animation</span><span style="color:#ADBAC7;">: moveRight </span><span style="color:#6CB6FF;">2</span><span style="color:#F47067;">s</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">linear</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">infinite</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">@keyframes</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">moveRight</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">from</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">transform</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">translateX</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">  }</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">to</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">transform</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">translateX</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">300</span><span style="color:#F47067;">px</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">  }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">box</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">width</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">50</span><span style="color:#AB5959;">px</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">height</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">50</span><span style="color:#AB5959;">px</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">background</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">red</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/* 触发硬件加速 */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">will-change</span><span style="color:#999999;">:</span><span style="color:#393A34;"> transform</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">move</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">animation</span><span style="color:#999999;">:</span><span style="color:#393A34;"> moveRight </span><span style="color:#2F798A;">2</span><span style="color:#AB5959;">s</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">linear</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">infinite</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#1E754F;">keyframes</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">moveRight</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">from</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">transform</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#998418;">translateX</span><span style="color:#999999;">(</span><span style="color:#2F798A;">0</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">to</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">transform</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#998418;">translateX</span><span style="color:#999999;">(</span><span style="color:#2F798A;">300</span><span style="color:#AB5959;">px</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p><strong>JavaScript 方式</strong>：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">let</span><span style="color:#ADBAC7;"> position </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">box</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> document.</span><span style="color:#DCBDFB;">querySelector</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;.box&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">animate</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">  position </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// 使用transform而不是left来优化性能</span></span>
<span class="line"><span style="color:#ADBAC7;">  box.style.transform </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">\`translateX(\${</span><span style="color:#ADBAC7;">position</span><span style="color:#96D0FF;">}px)\`</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (position </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">300</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#DCBDFB;">requestAnimationFrame</span><span style="color:#ADBAC7;">(animate);</span></span>
<span class="line"><span style="color:#ADBAC7;">  }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">position</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">box</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">document</span><span style="color:#999999;">.</span><span style="color:#59873A;">querySelector</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">.box</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">animate</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">position</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 使用transform而不是left来优化性能</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">box</span><span style="color:#999999;">.</span><span style="color:#B07D48;">style</span><span style="color:#999999;">.</span><span style="color:#B07D48;">transform</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">\`</span><span style="color:#B56959;">translateX(</span><span style="color:#999999;">\${</span><span style="color:#B56959;">position</span><span style="color:#999999;">}</span><span style="color:#B56959;">px)</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">position</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">300</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">requestAnimationFrame</span><span style="color:#999999;">(</span><span style="color:#B07D48;">animate</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h2 id="性能优化建议" tabindex="-1">性能优化建议 <a class="header-anchor" href="#性能优化建议" aria-label="Permalink to &quot;性能优化建议&quot;">​</a></h2><h3 id="css-animation-优化" tabindex="-1">CSS Animation 优化： <a class="header-anchor" href="#css-animation-优化" aria-label="Permalink to &quot;CSS Animation 优化：&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">.optimized</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/* 明确告诉浏览器要变化的属性 */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">will-change</span><span style="color:#ADBAC7;">: transform, opacity;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/* 创建新的合成层 */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">transform</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">translateZ</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">/* 或者 */</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">backface-visibility</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">hidden</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">optimized</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/* 明确告诉浏览器要变化的属性 */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">will-change</span><span style="color:#999999;">:</span><span style="color:#393A34;"> transform</span><span style="color:#999999;">,</span><span style="color:#393A34;"> opacity</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/* 创建新的合成层 */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">transform</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#998418;">translateZ</span><span style="color:#999999;">(</span><span style="color:#2F798A;">0</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/* 或者 */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">backface-visibility</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">hidden</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="requestanimationframe-优化" tabindex="-1">requestAnimationFrame 优化： <a class="header-anchor" href="#requestanimationframe-优化" aria-label="Permalink to &quot;requestAnimationFrame 优化：&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 批量处理DOM操作</span></span>
<span class="line"><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">elements</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> document.</span><span style="color:#DCBDFB;">querySelectorAll</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;.animate&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#F47067;">let</span><span style="color:#ADBAC7;"> positions </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Array</span><span style="color:#ADBAC7;">(elements.</span><span style="color:#6CB6FF;">length</span><span style="color:#ADBAC7;">).</span><span style="color:#DCBDFB;">fill</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">batchAnimate</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// 批量计算</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">let</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; i </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> positions.</span><span style="color:#6CB6FF;">length</span><span style="color:#ADBAC7;">; i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    positions[i] </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#768390;">// 批量应用</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">let</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; i </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> elements.</span><span style="color:#6CB6FF;">length</span><span style="color:#ADBAC7;">; i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    elements[i].style.transform </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">\`translateX(\${</span><span style="color:#ADBAC7;">positions</span><span style="color:#96D0FF;">[</span><span style="color:#ADBAC7;">i</span><span style="color:#96D0FF;">]</span><span style="color:#96D0FF;">}px)\`</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">requestAnimationFrame</span><span style="color:#ADBAC7;">(batchAnimate);</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 批量处理DOM操作</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">elements</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">document</span><span style="color:#999999;">.</span><span style="color:#59873A;">querySelectorAll</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">.animate</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">positions</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Array</span><span style="color:#999999;">(</span><span style="color:#B07D48;">elements</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#999999;">).</span><span style="color:#59873A;">fill</span><span style="color:#999999;">(</span><span style="color:#2F798A;">0</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">batchAnimate</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 批量计算</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">for</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">i</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">i</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">positions</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">i</span><span style="color:#AB5959;">++</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">positions</span><span style="color:#999999;">[</span><span style="color:#B07D48;">i</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 批量应用</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">for</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">i</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">i</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">elements</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">i</span><span style="color:#AB5959;">++</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">elements</span><span style="color:#999999;">[</span><span style="color:#B07D48;">i</span><span style="color:#999999;">].</span><span style="color:#B07D48;">style</span><span style="color:#999999;">.</span><span style="color:#B07D48;">transform</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">\`</span><span style="color:#B56959;">translateX(</span><span style="color:#999999;">\${</span><span style="color:#B56959;">positions</span><span style="color:#999999;">[</span><span style="color:#B56959;">i</span><span style="color:#999999;">]</span><span style="color:#999999;">}</span><span style="color:#B56959;">px)</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">requestAnimationFrame</span><span style="color:#999999;">(</span><span style="color:#B07D48;">batchAnimate</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h2 id="混合使用策略" tabindex="-1">混合使用策略 <a class="header-anchor" href="#混合使用策略" aria-label="Permalink to &quot;混合使用策略&quot;">​</a></h2><p>最佳实践是根据场景选择：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 用CSS处理简单动画</span></span>
<span class="line"><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">showModal</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">  modal.classList.</span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;fade-in&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">// 用RAF处理复杂逻辑</span></span>
<span class="line"><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">complexAnimation</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#DCBDFB;">requestAnimationFrame</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">animate</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">timestamp</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// 复杂计算</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">const</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">progress</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">calculateComplexProgress</span><span style="color:#ADBAC7;">(timestamp);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// 最终还是通过CSS属性应用</span></span>
<span class="line"><span style="color:#ADBAC7;">    element.style.transform </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">\`translateX(\${</span><span style="color:#ADBAC7;">progress</span><span style="color:#96D0FF;">}px)\`</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">isComplete) {</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#DCBDFB;">requestAnimationFrame</span><span style="color:#ADBAC7;">(animate);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">  });</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 用CSS处理简单动画</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">showModal</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">modal</span><span style="color:#999999;">.</span><span style="color:#B07D48;">classList</span><span style="color:#999999;">.</span><span style="color:#59873A;">add</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">fade-in</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// 用RAF处理复杂逻辑</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">complexAnimation</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">requestAnimationFrame</span><span style="color:#999999;">(</span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">animate</span><span style="color:#999999;">(</span><span style="color:#B07D48;">timestamp</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 复杂计算</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">progress</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">calculateComplexProgress</span><span style="color:#999999;">(</span><span style="color:#B07D48;">timestamp</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 最终还是通过CSS属性应用</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">element</span><span style="color:#999999;">.</span><span style="color:#B07D48;">style</span><span style="color:#999999;">.</span><span style="color:#B07D48;">transform</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">\`</span><span style="color:#B56959;">translateX(</span><span style="color:#999999;">\${</span><span style="color:#B56959;">progress</span><span style="color:#999999;">}</span><span style="color:#B56959;">px)</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">isComplete</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">requestAnimationFrame</span><span style="color:#999999;">(</span><span style="color:#B07D48;">animate</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p><strong>性能排序</strong>：</p><ol><li><strong>CSS Animation</strong> - 最优（硬件加速）</li><li><strong>CSS Transition</strong> - 次优（简单状态变化）</li><li><strong>requestAnimationFrame + transform</strong> - 良好</li><li><strong>requestAnimationFrame + layout 属性</strong> - 较差</li><li><strong>setTimeout/setInterval</strong> - 最差</li></ol><p><strong>选择建议</strong>：</p><ul><li>🎯 <strong>优先使用 CSS Animation</strong>用于简单、重复的 UI 动画</li><li>🔧 <strong>使用 requestAnimationFrame</strong>处理复杂逻辑和交互</li><li>🚀 <strong>混合使用</strong>：RAF 计算 + CSS 属性应用，获得最佳效果</li></ul><p>简单来说：<strong>CSS Animation 性能更好，requestAnimationFrame 控制更精确</strong>。</p>`,40),e=[o];function t(c,r,y,A,i,B){return n(),a("div",null,e)}const F=s(p,[["render",t]]);export{D as __pageData,F as default};
